{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Hist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Hist.vue","mtime":1615022809094},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Hist.vue"],"names":[],"mappings":";;;;;;;;;;AASA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,GAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,SADA;AAEA,MAAA,GAAA,EAAA,SAFA;AAGA,MAAA,CAAA,EAAA,SAHA;AAIA,MAAA,CAAA,EAAA,SAJA;AAKA,MAAA,KAAA,EAAA,SALA;AAMA,MAAA,CAAA,EAAA,SANA;AAOA,MAAA,OAAA,EAAA,SAPA;AAQA,MAAA,qBAAA,EAAA;AARA,KAAA;AAUA,GAbA;AAcA,EAAA,OAdA,qBAcA;AAAA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,GAAA;AAAA,KADA;AACA,GAhBA;AAiBA,EAAA,OAjBA,qBAiBA;AACA,SAAA,YAAA;AACA,SAAA,MAAA;AACA,GApBA;AAqBA;AACA;AACA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,GAAA;;AACA,QAAA,MAAA,CAAA,UAAA;AACA,OAHA;AAGA,KALA;AAMA,IAAA,YANA,0BAMA;AAAA;;AACA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,E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","sourcesContent":["/* eslint-disable */\n<template>\n  <div id=\"hist\">\n     <p>\n      <h4>  Distribution of visit against age</h4>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Bus from '../assets/bus.js';\n\nexport default {\n  name: \"App\",\n  data(){\n    return{\n      data:undefined,\n      svg:undefined,\n      x:undefined,\n      y:undefined,\n      yAxis:undefined,\n      u:undefined,\n      height1:undefined,\n      select_data_from_hist:undefined\n    }\n  },\n  created(){\n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val;})},\n  mounted() {\n    this.generateHist();\n    this.handle()\n  },\n  //watch:{handle(newval){\n    //this.age=newval,\n    //this.generateHist()}},\n  methods: {\n    handle: function () {\n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val;\n                this.updatehist()\n              })},\n    generateHist() {\n      //let age = this.$root.age_select\n      var min = 19;\n      var max = 67;\n      var domain = [min,max];\n      var a = [19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,30,30,30,30,30,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,41,41,41,41,41,41,41,41,41,41,41,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,53,53,53,53,53,53,53,53,53,53,53,53,53,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,61,61,61,61,61,61,61,61,61,61,62,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65]\n      var margin = { top: 0, right: 10, bottom: 30, left: 20 },\n        width1 = 400 - margin.left - margin.right\n      this.height1 = 280 - margin.top - margin.bottom;\n      const svg1 = d3\n        .select(\"#hist\")\n        .append(\"svg\")\n        .attr(\"width\", width1 + margin.left + margin.right)\n        .attr(\"height\", this.height1 + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        var x = d3\n          .scaleLinear()\n          .domain(domain) \n          .range([0, width1]); \n        \n        svg1.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height1 + \")\")\n          .call(d3.axisBottom(x));\n          // Y axis: initialization\n        var y = d3.scaleLinear()\n          .range([this.height1, 0]);\n        this.yAxis = svg1.append(\"g\")\n        var nBin=24\n        var histogram = d3\n          .histogram()\n          .domain(x.domain()) // then the domain of the graphic\n          .thresholds(x.ticks(nBin)); // then the numbers of bins\n\n        // And apply this function to data to get the bins\n        var bins = histogram(a);\n        // Add the svg element to the body and set the dimensions and margins of the graph\n\n        y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n        this.yAxis\n        .transition()\n        .duration(1000)\n        .call(d3.axisLeft(y));\n        this.u = svg1\n          .selectAll(\"rect\")\n          .data(bins)\n\n        this.u.enter()\n          .append(\"rect\")\n          .attr(\"x\", 1)\n          .merge(this.u)\n          .transition()\n          .attr(\"height\", (d)=>this.height1 - y(d.length))\n          .attr(\"transform\", function(d) { \n            return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n          })\n          .attr(\"width\", function(d) {\n            return x(d.x1) - x(d.x0) - 1})\n          .attr(\"fill\", \"#6495ED\")\n          this.x = x\n          this.y = y\n          this.svg = svg1}, \nupdatehist(){\nlet self = this\nvar all_data = this.data\nvar age = []\nfor(var i=0, len=this.data.length-1; i<len; i++){\n  var d = this.data[i]\n  age.push(parseInt(d.properties.age))}\nvar svg1 = this.svg\nvar x = this.x\nvar y = this.y\n// The number of bins \nvar nBin=24\nvar histogram = d3\n  .histogram()\n  .domain(x.domain()) // then the domain of the graphic\n  .thresholds(x.ticks(nBin)); // then the numbers of bins\n\n// And apply this function to data to get the bins\nvar bins = histogram(age);\n// Add the svg element to the body and set the dimensions and margins of the graph\ny.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\nthis.yAxis\n.transition()\n.duration(1000)\n.call(d3.axisLeft(y));\n\nthis.u = svg1\n  .selectAll(\"rect\")\n  .data(bins)\n\n  this.u.enter()\n  .append(\"rect\")\n  .attr(\"x\", 1)\n  .merge(this.u)\n  .transition()\n  .attr('height', (d)=>this.height1 - y(d.length))\n  .attr(\"transform\", function(d) { \n    return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n  })\n  .attr(\"width\", function(d) {\n    return x(d.x1) - x(d.x0) - 1})\n  .attr(\"fill\", \"#6495ED\")\n  .attr(\"id\",function(d,i){\n    return [19+i*(67-19)/24,i]\n  })\nvar select_age_by_column = []\nthis.u.on(\"click\",function(){\n    var that = this\n    var age = that.id.split(\",\")[0]\n    var index = that.id.split(\",\")[1]\n    self.GLOBAL.Log_file.push(['timestamp',new Date().getTime()/1000,\"click-hist-index\",index,'\\n'])\n    select_age_by_column.push(age)\n    d3.select(that)\n    .transition()\n    .duration(500)\n    .attr(\"fill\", \"orange\");\nvar select_data_from_hist = []\nfor(i=0, len=all_data.length-1; i<len; i++){\n  d = parseInt(all_data[i].properties.age)\n  for(var j=0,len2=select_age_by_column.length;j<len2;j++){\n    if(d-2<select_age_by_column[j]){\n      if (d>select_age_by_column[j]-1){\n      select_data_from_hist.push(all_data[i])\n    }}\n  }}\nBus.$emit(\"Hist_select_data\", select_data_from_hist)\n})\n}}\n}\n</script>"],"sourceRoot":"src/components"}]}