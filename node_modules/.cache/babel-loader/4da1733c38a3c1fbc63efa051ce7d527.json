{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Map.vue","mtime":1617179384171},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n<template>\n  <div>\n    <div style = \"width:380px;height:44px;float:left\">\n      <h4>Footprint</h4>\n    </div>\n    <div id = 'pos'  style = \"width:120px;height:24px;float:left\">\n      <p>  </p>\n\n    </div>\n  <div id=\"map\">\n  </div>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\"\nimport * as d3Chromatic from 'd3-scale-chromatic';\n//import Vue from 'vue';\nimport Bus from '../assets/bus.js';\n//import * as d3Voronoi from 'd3-voronoi'\n//var msgCenter = new Vue()\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      place_color:'',\n      select_data:'',\n      Hist_select_data:'',\n      Force_select_data:'',\n      myCircle:'',\n      myLink:'',\n      svg:'',\n      hover_period:'',\n      g4:'',\n      g3:'', \n      g2:'',\n      zoom_value:[],\n      g1_5:'',\n      vertices:'',\n      group1:'',\n      g1:'',\n      projection:'',\n      path:'',\n      dropdownButton:'',\n      subunits:'',\n      places:''\n    };\n  },\n  //created() {\n    // 在需要的传递数据的时候调用sendData方法，这里模拟调用\n    //this.sendData();\n    \n  //},\n  mounted() {\n    this.getMap();\n    this.handle()\n    //this.sendData();\n  },\n  methods: {\n    handle: function () {\n    Bus.$on(\"subunits\",()=>{this.generateArc()})\n    Bus.$on(\"New_Poet\", (val) => {\n      this.update(val)}),  \n    Bus.$on(\"hover_period\", (val) => {\n      this.hover_period=val;\n      this.show_period()}),\n    Bus.$emit(\"Map_age\", this.select_value),\n    Bus.$on(\"Hist_select_data\", (val) => {\n      this.Hist_select_data=val;\n      this.select_new_point()}),\n    Bus.$on(\"change\", () => {\n      var time = new Date().getTime()/1000\n\n      this.GLOBAL.Visual_state['timestamp'] = time\n      var save = JSON.stringify(this.GLOBAL.Visual_state)\n\n      this.GLOBAL.Visual_state_All.push([time,save])\n      this.postVisual({'name':this.GLOBAL.Visual_state})}),  \n    Bus.$on(\"Force_select_data\", (val) => {\n      this.Force_select_data=val;\n      this.select_new_point_Force()})\n    Bus.$on(\"Get_Predict\",(val) => {this.Get_Predict(val)})},\n    getMap(){\n      let self = this\n        d3.json(\"sushi_map.json\", function(error, point) {\n        self.subunits = topojson.feature(point, point.objects.china)\n        Bus.$emit(\"subunits\",self.subunits)\n})\n    },\n    generateArc() {\n      const width = 500;\n      const height = 640;\n\n      const projection = d3.geoAlbers()\n          .center([2, 29.6])\n          .rotate([-110, 0])\n          .parallels([20, 60])\n          .translate([width / 2, height / 2])\n          .scale(1600)\n      this.projection = projection\n\n      const path = d3.geoPath()\n          .projection(projection)\n          .pointRadius(2);\n      this.path = path\n      var dropdownButton = d3.select(\"#pos\")\n      .append('select').attr(\"x\",\"100px\")\n      \n      const svg = d3\n        .select(\"#map\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n      let self = this\n      d3.csv(\"place_senti2.csv\",function(data_all){\n        var data = {'Su Shi':[],'Huang Tingjian':[],'Ouyang Xiu':[],'Xin Qiji':[]}\n        for(var i in data_all){\n          if(data_all[i]['author']=='Su Shi'){\n            data['Su Shi'].push(data_all[i])\n          }\n          else if(data_all[i]['author']=='Huang Tingjian'){\n            data['Huang Tingjian'].push(data_all[i])\n          }\n          else if(data_all[i]['author']=='Ouyang Xiu'){\n            data['Ouyang Xiu'].push(data_all[i])\n          }\n          else if(data_all[i]['author']=='Xin Qiji'){\n            data['Xin Qiji'].push(data_all[i])\n          }          \n        }\n        self.place_color = data\n        self.place_color_select = data['Su Shi']\n      })\n      d3.json(\"map.json\", function(error, point) {\n      var subunits = self.subunits\n      var places_all = topojson.feature(point, point.objects.places)\n      var places1 = []\n      for(i in places_all['features']){\n        if(places_all['features'][i].properties.author=='Su Shi'){\n          places1.push(places_all['features'][i])\n        }\n      }\n      var places = {type: \"FeatureCollection\",features:places1}\n      self.places = places\n      self.GLOBAL.place_now = places\n      Bus.$emit('Start_Place', places)\n  var myColor = d3.scaleSequential()\n    .domain([0.83,0.42])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color_select[i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n  var zoom = d3.zoom()\n      .scaleExtent([0.5,3])//用于设置最小和最大的缩放比例\n      .on(\"zoom\",zoomed) \n/*\nself.GLOBAL.New_time = new Date().getTime()/1000\nself.GLOBAL.Old_time = self.GLOBAL.New_time\nself.GLOBAL.Log_file.push(['Start_timestamp',self.GLOBAL.New_time,'\\n'])\nself.postInteraction({'name':self.GLOBAL.Log_file})*/\n//编写 平移函数\n/*\nfunction reset() {\n    \n      svg.transition().duration(750).call( //duration过渡时间\n        zoom.transform,\n        d3.zoomIdentity, //控制缩放中心的为鼠标当前位置\n        d3.zoomTransform(svg.node()).invert([width / 2, height / 2]) //弹性动画的圆心位置\n      );\n}*/\n// 缩放函数\n\nfunction zoomed() {\n    const transform = d3.event.transform; //识别鼠标事件\n    self.GLOBAL.New_time = new Date().getTime()/1000\n      self.zoom_value.push(['timestamp',new Date().getTime()/1000,'Zoom-Map-Value',transform,'\\n'])\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    \n    group1.attr(\"transform\", transform); //将缩放结果传给g\n    var k = Math.sqrt(100 / projection.scale()); //修改地图尺寸\n    group1.attr(\"stroke-width\", 1 / k); //修改对应的属性\n    return transform\n}\n    var group1 = svg.append(\"g\").attr(\"id\",\"group\").datum({\n    x: 0,\n    y: 0\n  })//.on(\"click\", reset);  //定义点击事件\n      var g1 = group1.append(\"g\").attr(\"id\",\"for_path\"); \n      //var g0 = group.append(\"g\").attr(\"id\",\"for_vo\"); //新增组，用于存储不同对象\n      var g1_5 = group1.append(\"g\").attr(\"id\",\"for_interaction_suggestion\"); //\n      self.g1_5 = g1_5\n      var g3 = group1.append(\"g\").attr(\"id\",\"for_line\").attr(\"pointer-events\",\"none\");\n      var g2 = group1.append(\"g\").attr(\"id\",\"for_circle\");\nself.g2 = g2\nself.g3 = g3\n// \n\n\ng1.selectAll(\".subunit\")\n      .data(subunits.features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return \"subunit \" + d.id; })\n      .attr(\"d\", path)\n      .attr('stroke','#222')\n      .attr('stroke-width','1px')\n      .attr('fill',function(d){var p = d.properties.name\n        if((p=='山西省')|(p=='陕西省')|(p=='河南省')|(p=='河北省')|(p=='北京市')|\n          (p=='天津市')|(p=='河南省')|(p=='山东省')|(p=='江苏省')|(p=='浙江省')|\n          (p=='上海市')|(p=='湖南省')|(p=='湖北省')|(p=='江西省')|(p=='重庆市')|\n          (p=='四川省')|(p=='广西壮族自治区')|(p=='海南省')|(p=='广东省')|(p=='贵州省')|\n          (p=='福建省')|(p=='安徽省')){return '#ccc'}\n        else{return '#fff'}})\n\nvar link1s = [\n  {type: \"LineString\", age:0,coordinates: [[0,0],[0,0]]}\n]\n    for(var i=0, len=places.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n        link1s.push({\n            type: \"LineString\",\n            age : places.features[i].properties.age,\n            coordinates: [\n                [ places.features[i].geometry.coordinates[0], places.features[i].geometry.coordinates[1]],\n                [ places.features[i+1].geometry.coordinates[0], places.features[i+1].geometry.coordinates[1]]]\n        });\n    }\n    g3.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 8 8')\n        .attr('refX', 5)\n        .attr('markerWidth', 2.5)//箭头参数适当按需调整\n        .attr('markerHeight', 2.5)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')//绘制箭头形状\n        .attr('fill', '#483D8B');\n  // 加label\n\n  self.myLink = g3.selectAll(\"myPath\")\n\n      .data(link1s)\n      .enter()\n      .append(\"path\")\n        .attr(\"d\", function(d){ return path(d)})\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#483D80\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\",0.4)\n        .attr(\"marker-end\", \"url(#end-arrow)\")\n      g3.append(\"path\")\n        .attr(\"d\", d3.symbol().type(d3.symbolStar).size(200))\n        .attr(\"fill\",'red')\n        .attr(\"transform\",\"translate(297,166)\")\n  self.myCircle = g2.selectAll(\".place-point\")\n      .data(places.features)\n    .enter()\n    .append(\"circle\")\n      .attr(\"class\", \"place-point\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .attr(\"x\", function(d) { return d.geometry.coordinates[0] > -1 ? 6 : -6; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"r\", 4.8)//function(d) { return d.properties.age/10; })\n      .attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n\n\n  self.svg = svg\n  var se = []\n  var vertices = []\nfor (i = 0, len = places.features.length; i < len; i++) {\n  var d = places.features[i]\n  se.push({'coordinates':projection(d.geometry.coordinates),'color':choose_color(d)})\n  vertices.push(projection(d.geometry.coordinates))\n}\nself.vertices = vertices\nself.GLOBAL.Visual_state['Map']['overall'] = se\n\nvar allGroup = ['none',\"select area\", \"zoom\", \"show point info\"]\ndropdownButton.on(\"change\", dropchange)\n\n// add the options to the button\ndropdownButton // Add a button\n  .selectAll('myOptions') // Next 4 lines add 6 options = 6 colors\n  .data(allGroup)\n  .enter()\n  .append('option')\n  .text(function (d) { return d; }) // text showed in the menu\n  .attr(\"value\", function (d) { return d; }) \nself.dropdownButton = dropdownButton\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"100\")\n    .style(\"visibility\", \"hidden\")\nvar g4 = group1.append(\"g\").attr(\"id\",\"for_brush\"); //\n\nself.g4 = g4\nfunction dropchange(){\n  var newCereal = d3.select(this).property('value')\n  if (newCereal=='zoom'){\n    self.zoom_value = []\n    svg.call(zoom)\n     g4.style(\"display\",\"none\")\nself.svg.on(\"click\", function(){self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})})\n  self.myCircle.on(\"mouseover\", function(){return null})\n    .on(\"mousemove\", function(){return null})\n    .on(\"mouseout\", function(){return null})\n    d3.select(\"#map\")\n    .on('mouseover', function(){return null})\n  }\n  else if (newCereal=='select area'){\n    svg.on('.zoom', null)\n\n    g4.style(\"display\",\"block\")\n  g4\n    .call( d3.brush()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on(\"end\", updata_chart)\n    )    \n  }\n  else if ((newCereal=='show point info'))\n    {svg.on('.zoom', null)\n  self.myCircle//.attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n      .attr('r',4.8)\n      .attr('stroke',null)\n\n      g4.style(\"display\",\"none\")\n    /*\n    self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    */\n\n      self.myCircle.on(\"click\", function(d){d3.select(this).attr(\"fill\",\"#BC8F8F\")\n      self.GLOBAL.New_time = new Date().getTime()/1000\n      if ((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n      self.GLOBAL.Visual_state['Map']['visit'].push(d),\n      Bus.$emit(\"change\", self.GLOBAL.Visual_state),\n      d3.select(\"#map\")\n  .on('click', function(){self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-map-position',d3.mouse(this),d.properties.name,'\\n']),self.postInteraction({'name':self.GLOBAL.Log_file}), self.GLOBAL.Old_time = self.GLOBAL.New_time})\n\n  }\n  return tooltip.style(\"visibility\", \"visible\").style(\"top\",(d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\").text(d.properties.name+','+d.properties.age+'岁')\n})\n    .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\"),d3.select(this).transition().duration(500).attr(\"fill\", function(d){return choose_color(d)});})\n    }\n}\n\n  function updata_chart(){\n    self.myCircle.attr(\"opacity\",0.7)\n    self.myLink.style(\"opacity\",0.4)\n    var select_data = update_data()\n  Bus.$emit(\"Map_select_data\", select_data)\n  }\n\n  function update_data() {\n    var select_data = []\n    var extent = d3.event.selection\n    self.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n    self.myCircle.classed(\"selected_first\", function(d){ return isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]) }) \n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'Brush-Map-Position',extent[0],extent[1],'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    //console.log('r',self.GLOBAL.Get_message)\n    for(i=0, len=self.places.features.length-1; i<len; i++){\n      var d = self.places.features[i]\n      if(isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]))\n        {//a = a+parseInt(d.properties.age)}\n        select_data.push(d)}\n      }\n      return select_data\n      }\n\nfunction isBrushed(brush_coords, cx, cy) {\n       var x0 = brush_coords[0][0],\n           x1 = brush_coords[1][0],\n           y0 = brush_coords[0][1],\n           y1 = brush_coords[1][1];\n      return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;    // This return TRUE or FALSE depending on if the points is in the selected area\n  }\n\n  }})},\nupdate(author){\nthis.g1_5.selectAll(\"*\").remove()\nthis.g2.selectAll(\"*\").remove()\nthis.g3.selectAll(\"*\").remove()\nthis.place_color_select = this.place_color[author]\n      //const width = 500;\n      //const height = 640;\nvar svg = this.svg\nvar projection = this.projection \nvar path = this.path\n//var dropdownButton = this. dropdownButton\nlet self = this\n      d3.json(\"map.json\", function(error, point) {\n      var places_all = topojson.feature(point, point.objects.places)\n\n      var places1 = []\n      for(i in places_all['features']){\n        if(places_all['features'][i].properties.author==author){\n          places1.push(places_all['features'][i])\n        }\n      }\n      var places = {type: \"FeatureCollection\",features:places1}\n      self.places = places\n      self.GLOBAL.place_now = places\n      \n  var myColor = d3.scaleSequential()\n    .domain([0.83,0.42])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color[author][i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n      var g3 = self.g3\n      var g2 = self.g2\n\n// \nvar link1s = [\n  {type: \"LineString\", age:0,coordinates: [[0,0],[0,0]]}\n]\n    for(var i=0, len=places.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n        link1s.push({\n            type: \"LineString\",\n            age : places.features[i].properties.age,\n            coordinates: [\n                [ places.features[i].geometry.coordinates[0], places.features[i].geometry.coordinates[1]],\n                [ places.features[i+1].geometry.coordinates[0], places.features[i+1].geometry.coordinates[1]]]\n        });\n    }\n    g3.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 8 8')\n        .attr('refX', 5)\n        .attr('markerWidth', 2.5)//箭头参数适当按需调整\n        .attr('markerHeight', 2.5)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')//绘制箭头形状\n        .attr('fill', '#483D8B');\n  // 加label\n\n  self.myLink = g3.selectAll(\"myPath\")\n      .data(link1s)\n      .enter()\n      .append(\"path\")\n        .attr(\"d\", function(d){ return path(d)})\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#483D80\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\",0.4)\n        .attr(\"marker-end\", \"url(#end-arrow)\")\n      g3.append(\"path\")\n        .attr(\"d\", d3.symbol().type(d3.symbolStar).size(200))\n        .attr(\"fill\",'red')\n        .attr(\"transform\",\"translate(297,166)\")\n  self.myCircle = g2.selectAll(\".place-point\")\n      .data(places.features)\n    .enter()\n    .append(\"circle\")\n      .attr(\"class\", \"place-point\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .attr(\"x\", function(d) { return d.geometry.coordinates[0] > -1 ? 6 : -6; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"r\", 4.8)//function(d) { return d.properties.age/10; })\n      .attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n\n\n  self.svg = svg\n  var se = []\n  var vertices = []\nfor (i = 0, len = places.features.length; i < len; i++) {\n  var d = places.features[i]\n  se.push({'coordinates':projection(d.geometry.coordinates),'color':choose_color(d)})\n  vertices.push(projection(d.geometry.coordinates))\n}\nself.vertices = vertices\nself.GLOBAL.Visual_state['Map']['overall'] = se})\n\n/*\nvar allGroup = ['none',\"select area\", \"zoom\", \"show point info\"]\ndropdownButton.on(\"change\", dropchange)\n\n// add the options to the button\ndropdownButton // Add a button\n  .selectAll('myOptions') // Next 4 lines add 6 options = 6 colors\n  .data(allGroup)\n  .enter()\n  .append('option')\n  .text(function (d) { return d; }) // text showed in the menu\n  .attr(\"value\", function (d) { return d; }) \n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"100\")\n    .style(\"visibility\", \"hidden\")\nvar g4 = self.g4\nself.g4 = g4\n\nfunction dropchange(){\n  var newCereal = d3.select(this).property('value')\n  if (newCereal=='zoom'){\n    self.zoom_value = []\n    svg.call(zoom)\n     g4.style(\"display\",\"none\")\nself.svg.on(\"click\", function(){self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})})\n  self.myCircle.on(\"mouseover\", function(){return null})\n    .on(\"mousemove\", function(){return null})\n    .on(\"mouseout\", function(){return null})\n    d3.select(\"#map\")\n    .on('mouseover', function(){return null})\n  }\n  else if (newCereal=='select area'){\n    svg.on('.zoom', null)\n    \n\n    g4.style(\"display\",\"block\")\n  g4\n    .call( d3.brush()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on(\"end\", updata_chart)\n    )    \n  }\n  else if ((newCereal=='show point info'))\n    {svg.on('.zoom', null)\n      g4.style(\"display\",\"none\")\n    self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n\n\n      self.myCircle.on(\"click\", function(d){d3.select(this).attr(\"fill\",\"#BC8F8F\")\n      self.GLOBAL.New_time = new Date().getTime()/1000\n      if ((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n      self.GLOBAL.Visual_state['Map']['visit'].push(d),\n      Bus.$emit(\"change\", self.GLOBAL.Visual_state),\n      d3.select(\"#map\")\n  .on('click', function(){self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-map-position',d3.mouse(this),d.properties.name,'\\n']),self.postInteraction({'name':self.GLOBAL.Log_file}), self.GLOBAL.Old_time = self.GLOBAL.New_time})\n\n  }\n  return tooltip.style(\"visibility\", \"visible\").style(\"top\",(d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\").text(d.properties.name+','+d.properties.age+'岁')\n})\n    .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\"),d3.select(this).transition().duration(500).attr(\"fill\", function(d){return choose_color(d)});})\n    }\n}\n\n  function updata_chart(){\n    self.myCircle.attr(\"opacity\",0.7)\n    self.myLink.style(\"opacity\",0.4)\n    var select_data = update_data()\n  Bus.$emit(\"Map_select_data\", select_data)\n  }\n\n  function update_data() {\n    var select_data = []\n    var extent = d3.event.selection\n    self.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n    self.myCircle.classed(\"selected_first\", function(d){ return isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]) }) \n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'Brush-Map-Position',extent[0],extent[1],'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    //console.log('r',self.GLOBAL.Get_message)\n    for(i=0, len=places.features.length-1; i<len; i++){\n      var d = places.features[i]\n      if(isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]))\n        {//a = a+parseInt(d.properties.age)}\n        select_data.push(d)}\n      }\n      return select_data\n      }\n\nfunction isBrushed(brush_coords, cx, cy) {\n       var x0 = brush_coords[0][0],\n           x1 = brush_coords[1][0],\n           y0 = brush_coords[0][1],\n           y1 = brush_coords[1][1];\n      return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;    // This return TRUE or FALSE depending on if the points is in the selected area\n  }\n\n  }})\n*/},\n\nselect_new_point(){\n    var data = this.Hist_select_data\n    this.myCircle.classed(\"selected_second\", function(d){return isSelectedByHist(d,data)})\n    //this.myLink.style(\"stroke\",function(d) {return LinkisSelectedByHist(d)})\n    //this.myLink.style(\"opacity\",function(d) {return LinkisSelectedByHist_O(d)})\n    //this.myLink.style(\"stroke-width\",function(d) {return LinkisSelectedByHist_S(d)})\n    \nfunction isSelectedByHist(a,data){\n  for(var i=0,len=data.length;i<len;i++){\n    var geo = data[i].properties.name\n    var age_select = data[i].properties.age\n    if (a.properties.name==geo){\n      if(a.properties.age==age_select){\n        return (1==1)\n      }}}\n  return (1==0)}\n},\nselect_new_point_Force(){\n  var data = this.Force_select_data\n  this.myCircle.classed(\"selected_second\", function(d){return d.properties.name==data})\n},\nshow_period(){\n  this.g4.style(\"display\",\"none\")\n  let self = this\n  var myColor = d3.scaleSequential()\n    .domain([0.83,0.42])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color_select[i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n  function choose_id(place){\n    var name = place.properties.name\n    var res = 5\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color_select[i]\n      if(name == sli['place']){\n        var senti = sli['senti']\n        if(senti<0.502){\n          res = 0\n        }\n        else if ((senti>0.502)&(senti<0.584)){res = 1}\n        else if ((senti>0.584)&(senti<0.666)){res = 2}\n        else if ((senti>0.666)&(senti<0.748)){res = 3}\n        else if ((senti>0.748)){res = 4}\n      }\n    }\n    return res\n  }\n  this.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n  this.myCircle.attr(\"opacity\",function(d){\n    var id = choose_id(d)\n    if(self.hover_period==6){\n       return 0.7\n    }\n    if(id==self.hover_period){\n      return 1\n    }\n    else{return 0}\n  })\n  this.myLink.style(\"opacity\",function(){\n    if(self.hover_period==6){ return 0.4}\n    else{return 0}\n  })},\nGet_Predict(predict_all){\n  console.log('Map_Get_Predict')\n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    console.log('position',position)\n  if (predict['type']=='Brush'){\n    var x_1 = Math.min(Math.max(0,position['x_position1']),500)\n    var y_1 = Math.min(Math.max(0,position['y_position1']),650)\n    var x_2 = Math.min(Math.max(x_1+20,position['x_position2']),500)\n    var y_2 = Math.min(Math.max(y_1+20,position['y_position2']),650)\n\n    this.g1_5.append('rect')\n  .attr('x', x_1)\n  .attr('y', y_1)\n  .attr('width', x_2-x_1)\n  .attr('height', y_2-y_1)\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"1px\")\n  .attr(\"opacity\",0.5)\n  .attr('fill', '#69a3b2');\n\n      this.g1_5.append('text')\n  .attr('x', x_1)\n  .attr('y', y_1)\n  .text('Brush')\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"1px\")\n  .style(\"font-size\",\"14px\");\n  }\n  \n  if (predict['type']=='Zoom'){\n    var scale = position['scale']\n    var delta_x = position['delta_x']\n    var delta_y = position['delta_y']\n    var width_rec = 500/scale\n    var height_rec = 640/scale\n    var x1 = Math.max(0,-delta_x)\n    var y1 = Math.max(0,-delta_y)\n        this.g1_5.append('rect')\n  .attr('x', x1)\n  .attr('y', y1)\n  .attr('width', width_rec)\n  .attr('height', height_rec)\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"1px\")\n  .attr(\"opacity\",0.1)\n  .attr('fill', '#69a3b2');\n\n      this.g1_5.append('text')\n  .attr('x', x1)\n  .attr('y', y1)\n  .text('Zoom')\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"2px\")\n  .style(\"font-size\",\"14px\");\n  }\n  \n  if (predict['type']=='Click'){\n    if(predict['Object_View']=='Map'){\n    var x_position = position['x_position']\n    var y_position = position['y_position']\n    var dist = 0\n    var min_dist = Number.POSITIVE_INFINITY\n    var diss = 0\n    for(i in this.vertices){\n      var d = this.vertices[i]\n      dist = (x_position-d[0])**2+(y_position-d[1])**2\n      if (dist<min_dist){\n        diss = d\n        min_dist = dist\n      }\n    }\n    this.g1_5.append('circle')\n  .attr('cx', diss[0])\n  .attr('cy', diss[1])\n  .attr('r', 7)\n  .attr('stroke', 'black')\n  .attr(\"stroke-width\",'4px')\n  .attr(\"opacity\",1)\n  .attr('fill', '#69a3b2');}}\n  }\n\n\n}\n\n}}\n</script>\n<style>\n\n.selected_first {\n  stroke: black;\n  stroke-width: 1px;\n}\n.selected_second {\n  opacity: 1;\n  stroke: black;\n  stroke-width: 3px;\n  fill: orange;\n  r:6px;\n}\n.subunit.SCT { fill: #ddc; }\n.subunit.WLS { fill: #cdd; }\n.subunit.NIR { fill: #cdc; }\n.subunit.ENG { fill: #dcd; }\n\n.subunit.IRL,\n.subunit-label.IRL {\n  display: none;\n}\n\n.subunit-boundary {\n  fill: none;\n  stroke: #777;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n}\n\n.subunit-boundary.IRL {\n  stroke: #aaa;\n}\n\n.subunit-label {\n  fill: #777;\n  fill-opacity: .5;\n  font-size: 20px;\n  font-weight: 300;\n  text-anchor: middle;\n}\n.place-point\n.place\n.place-label {\n  fill: #444;\n}\n\ntext {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 10px;\n  pointer-events: none;\n}\n#label {\n  position: absolute;\n  left: 10px;\n  font-weight: 100;\n  font-family: \"Proxima Nova\", \"Montserrat\", sans-serif;\n}\n\n.hover {\n    fill: yellow;   \n}\n.desplegable {\n        left: 10px;\n        top: 5px;\n    }\n/*\n#sliderContainer {\n    text-align: center;\n    top: 600px;\n    left:10px;\n}\n#histplot{\n    text-align: center;\n    top: 600px;\n    left:10px;\n}\n#map {\n    top: 2000px;\n    left:1000px;\n}\n*/\n</style>"],"sourceRoot":"src/components"}]}