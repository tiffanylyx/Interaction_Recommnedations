{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Map.vue","mtime":1615810466534},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Map.vue"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\n<template>\n  <div>\n    <div style = \"width:380px;height:44px;float:left\">\n      <h4>Footprint</h4>\n    </div>\n    <div id = 'pos'  style = \"width:120px;height:24px;float:left\">\n      <p>  </p>\n\n    </div>\n  <div id=\"map\">\n  </div>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\"\nimport * as d3Chromatic from 'd3-scale-chromatic';\n//import Vue from 'vue';\nimport Bus from '../assets/bus.js';\n//import * as d3Voronoi from 'd3-voronoi'\n//var msgCenter = new Vue()\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      place_color:'',\n      select_data:'',\n      Hist_select_data:'',\n      Force_select_data:'',\n      myCircle:'',\n      myLink:'',\n      svg:'',\n      hover_period:'',\n      g4:'',\n      zoom_value:[],\n      g1_5:'',\n      v_path:''\n    };\n  },\n  //created() {\n    // 在需要的传递数据的时候调用sendData方法，这里模拟调用\n    //this.sendData();\n  //},\n  mounted() {\n    this.generateArc();\n    this.handle()\n    //this.sendData();\n  },\n  methods: {\n    handle: function () {\n    Bus.$on(\"hover_period\", (val) => {\n      this.hover_period=val;\n      this.show_period()}),\n    Bus.$emit(\"Map_age\", this.select_value),\n    Bus.$on(\"Hist_select_data\", (val) => {\n      this.Hist_select_data=val;\n      this.select_new_point()}),\n    Bus.$on(\"change\", () => {\n      this.GLOBAL.Visual_state['timestamp'] = new Date().getTime()/1000\n      this.postVisual({'name':this.GLOBAL.Visual_state})}),    \n    Bus.$on(\"Force_select_data\", (val) => {\n      this.Force_select_data=val;\n      this.select_new_point_Force()})\n    Bus.$on(\"Get_Predict\",(val) => {this.Get_Predict(val)})},\n    generateArc() {\n      const width = 500;\n      const height = 640;\n\n      const projection = d3.geoAlbers()\n          .center([2, 29.6])\n          .rotate([-110, 0])\n          .parallels([20, 60])\n          .translate([width / 2, height / 2])\n          .scale(1500)\n\n\n      const path = d3.geoPath()\n          .projection(projection)\n          .pointRadius(2);\n      var dropdownButton = d3.select(\"#pos\")\n      .append('select').attr(\"x\",\"100px\")\n      const svg = d3\n        .select(\"#map\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n      let self = this\n      d3.csv(\"place_senti.csv\",function(data){\n        self.place_color = data\n      })\n      d3.json(\"sushi_map.json\", function(error, point) {\n\n      var subunits = topojson.feature(point, point.objects.china),\n      places = topojson.feature(point, point.objects.places);\n  var myColor = d3.scaleSequential()\n    .domain([0.79,0.45])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<129; i++) {\n      var sli = self.place_color[i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n  var zoom = d3.zoom()\n      .scaleExtent([0.5,3])//用于设置最小和最大的缩放比例\n      .on(\"zoom\",zoomed) \nself.GLOBAL.New_time = new Date().getTime()/1000\nself.GLOBAL.Old_time = self.GLOBAL.New_time\nself.GLOBAL.Log_file.push(['Start_timestamp',self.GLOBAL.New_time,'\\n'])\nself.postInteraction({'name':self.GLOBAL.Log_file})\n//编写 平移函数\nfunction reset() {\n    \n      svg.transition().duration(750).call( //duration过渡时间\n        zoom.transform,\n        d3.zoomIdentity, //控制缩放中心的为鼠标当前位置\n        d3.zoomTransform(svg.node()).invert([width / 2, height / 2]) //弹性动画的圆心位置\n      );\n}\n// 缩放函数\nfunction zoomed() {\n    const transform = d3.event.transform; //识别鼠标事件\n    self.GLOBAL.New_time = new Date().getTime()/1000\n      self.zoom_value.push(['timestamp',new Date().getTime()/1000,'Zoom-Map-Value',transform,'\\n'])\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    \n    \n    //self.postMsg({'name':self.GLOBAL.Log_file})\n    group.attr(\"transform\", transform); //将缩放结果传给g\n    var k = Math.sqrt(100 / projection.scale()); //修改地图尺寸\n    group.attr(\"stroke-width\", 1 / k); //修改对应的属性\n    return transform\n}\n\n    var group = svg.append(\"g\").attr(\"id\",\"group\").datum({\n    x: 0,\n    y: 0\n  }).on(\"click\", reset);  //定义点击事件\n      var g1 = group.append(\"g\").attr(\"id\",\"for_path\"); //新增组，用于存储不同对象\n      var g1_5 = group.append(\"g\").attr(\"id\",\"for_interaction_suggestion\"); //\n      self.g1_5 = g1_5\n      var g3 = group.append(\"g\").attr(\"id\",\"for_line\").attr(\"pointer-events\",\"none\");\n      var g2 = group.append(\"g\").attr(\"id\",\"for_circle\");\n\n  g1.selectAll(\".subunit\")\n      .data(subunits.features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return \"subunit \" + d.id; })\n      .attr(\"d\", path)\n      .attr('stroke','#222')\n      .attr('stroke-width','1px')\n      .attr('fill',function(d){var p = d.properties.name\n        if((p=='山西省')|(p=='陕西省')|(p=='河南省')|(p=='河北省')|(p=='北京市')|\n          (p=='天津市')|(p=='河南省')|(p=='山东省')|(p=='江苏省')|(p=='浙江省')|\n          (p=='上海市')|(p=='湖南省')|(p=='湖北省')|(p=='江西省')|(p=='重庆市')|\n          (p=='四川省')|(p=='广西壮族自治区')|(p=='海南省')|(p=='广东省')|(p=='贵州省')|\n          (p=='福建省')|(p=='安徽省')){return '#ccc'}\n        else{return '#fff'}\n        });\n\n// \nvar link1s = [\n  {type: \"LineString\", age:0,coordinates: [[0,0],[0,0]]}\n]\n    for(var i=0, len=places.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n        link1s.push({\n            type: \"LineString\",\n            age : places.features[i].properties.age,\n            coordinates: [\n                [ places.features[i].geometry.coordinates[0], places.features[i].geometry.coordinates[1]],\n                [ places.features[i+1].geometry.coordinates[0], places.features[i+1].geometry.coordinates[1]]]\n        });\n    }\n    g3.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 8 8')\n        .attr('refX', 5)\n        .attr('markerWidth', 2.5)//箭头参数适当按需调整\n        .attr('markerHeight', 2.5)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')//绘制箭头形状\n        .attr('fill', '#483D8B');\n  // 加label\n\n  self.myLink = g3.selectAll(\"myPath\")\n\n      .data(link1s)\n      .enter()\n      .append(\"path\")\n        .attr(\"d\", function(d){ return path(d)})\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#483D80\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\",0.4)\n        .attr(\"marker-end\", \"url(#end-arrow)\")\n  self.myCircle = g2.selectAll(\".place-point\")\n      .data(places.features)\n    .enter()\n    .append(\"circle\")\n      .attr(\"class\", \"place-point\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .attr(\"x\", function(d) { return d.geometry.coordinates[0] > -1 ? 6 : -6; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"r\", 4.3)//function(d) { return d.properties.age/10; })\n      .attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n\n\n  self.svg = svg\n  var se = []\nfor (i = 0, len = places.features.length; i < len; i++) {\n  var d = places.features[i]\n  se.push({'coordinates':projection(d.geometry.coordinates),'color':choose_color(d)})\n}\nself.GLOBAL.Map_state.push({'Map':se})\nself.GLOBAL.Visual_state['Map']['overall'] = se\n//Bus.$emit(\"change\", self.GLOBAL.Visual_state)\n\n  var voronoi = d3.voronoi()\n            .extent([[0, 0], [width, height]]);\n  var path1 = g2.selectAll(\"path\");\n  path1 = path1.data(voronoi(se).polygons());  \n  path1.exit().remove();\n  path1.enter().append(\"path\")\n            .attr(\"d\", (d) =>  \n              { return d ?  \n                (\"M\" + d.join(\"L\") + \n                 \"Z\"):null; }) \n  path1.order();\n  console.log('path1',path1)\n  self.v_path = path1\nvar allGroup = ['none',\"select area\", \"zoom\", \"show point info\"]\ndropdownButton.on(\"change\", dropchange)\n\n// add the options to the button\ndropdownButton // Add a button\n  .selectAll('myOptions') // Next 4 lines add 6 options = 6 colors\n  .data(allGroup)\n  .enter()\n  .append('option')\n  .text(function (d) { return d; }) // text showed in the menu\n  .attr(\"value\", function (d) { return d; }) \n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"100\")\n    .style(\"visibility\", \"hidden\")\nvar g4 = group.append(\"g\").attr(\"id\",\"for_brush\"); //\n\nself.g4 = g4\nfunction dropchange(){\n  var newCereal = d3.select(this).property('value')\n  if (newCereal=='zoom'){\n    self.zoom_value = []\n    //self.GLOBAL.Log_file.push(['timestamp',new Date().getTime()/1000,'newCereal',newCereal,'\\n'])\n    //self.postInteraction({'name':self.GLOBAL.Log_file})\n    svg.call(zoom)\n     g4.style(\"display\",\"none\")\n      self.myCircle.on(\"mouseover\", function(){return null})\n    .on(\"mousemove\", function(){return null})\n    .on(\"mouseout\", function(){return null})\n    d3.select(\"#map\")\n    .on('mouseover', function(){return null})\n  }\n  else if (newCereal=='select area'){\n    svg.on('.zoom', null)\n    self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n\n    //self.GLOBAL.Log_file.push(['timestamp',new Date().getTime()/1000,'newCereal',newCereal,'\\n'])\n    //self.postInteraction({'name':self.GLOBAL.Log_file})\n    g4.style(\"display\",\"block\")\n  g4\n    .call( d3.brush()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on(\"end\", updata_chart)\n    )    \n  }\n  else if ((newCereal=='show point info'))\n    {svg.on('.zoom', null)\n      g4.style(\"display\",\"none\")\n    self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n\n    //self.GLOBAL.Log_file.push(['timestamp',new Date().getTime()/1000,'newCereal',newCereal,'\\n'])\n    //self.postInteraction({'name':self.GLOBAL.Log_file})\n      self.myCircle.on(\"click\", function(d){d3.select(this).attr(\"fill\",\"#BC8F8F\")\n      self.GLOBAL.New_time = new Date().getTime()/1000\n      if ((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n      self.GLOBAL.Visual_state['Map']['visit'].push(d),\n      Bus.$emit(\"change\", self.GLOBAL.Visual_state),\n      d3.select(\"#map\")\n  .on('click', function(){self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-map-position',d3.mouse(this),d.properties.name,'\\n'])}),\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    self.getPredict()\n\n  }\n  return tooltip.style(\"visibility\", \"visible\").style(\"top\",(d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\").text(d.properties.name+','+d.properties.age+'岁')\n})\n    .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\"),d3.select(this).transition().duration(500).attr(\"fill\", function(d){return choose_color(d)});})\n    }\n}\n\n  function updata_chart(){\n    self.myCircle.attr(\"opacity\",0.7)\n    self.myLink.style(\"opacity\",0.4)\n    var select_data = update_data()\n  Bus.$emit(\"Map_select_data\", select_data)\n  }\n\n  function update_data() {\n    var select_data = []\n    var extent = d3.event.selection\n    self.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n    self.myCircle.classed(\"selected_first\", function(d){ return isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]) }) \n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'Brush-Map-Position',extent[0],extent[1],'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    //console.log('r',self.GLOBAL.Get_message)\n    for(i=0, len=places.features.length-1; i<len; i++){\n      var d = places.features[i]\n      if(isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]))\n        {//a = a+parseInt(d.properties.age)}\n        select_data.push(d)}\n      }\n      return select_data\n      }\n\nfunction isBrushed(brush_coords, cx, cy) {\n       var x0 = brush_coords[0][0],\n           x1 = brush_coords[1][0],\n           y0 = brush_coords[0][1],\n           y1 = brush_coords[1][1];\n      return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;    // This return TRUE or FALSE depending on if the points is in the selected area\n  }\n\n  }})},\n  \nselect_new_point(){\n    var data = this.Hist_select_data\n    this.myCircle.classed(\"selected_second\", function(d){return isSelectedByHist(d,data)})\n    //this.myLink.style(\"stroke\",function(d) {return LinkisSelectedByHist(d)})\n    //this.myLink.style(\"opacity\",function(d) {return LinkisSelectedByHist_O(d)})\n    //this.myLink.style(\"stroke-width\",function(d) {return LinkisSelectedByHist_S(d)})\n    \nfunction isSelectedByHist(a,data){\n  for(var i=0,len=data.length;i<len;i++){\n    var geo = data[i].properties.name\n    var age_select = data[i].properties.age\n    if (a.properties.name==geo){\n      if(a.properties.age==age_select){\n        return (1==1)\n      }}}\n  return (1==0)}\n},\nselect_new_point_Force(){\n  var data = this.Force_select_data\n  this.myCircle.classed(\"selected_second\", function(d){return d.properties.name==data})\n},\nshow_period(){\n  this.g4.style(\"display\",\"none\")\n  let self = this\n  var myColor = d3.scaleSequential()\n    .domain([0.79,0.45])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<129; i++) {\n      var sli = self.place_color[i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n  function choose_id(place){\n    var name = place.properties.name\n    var res = 5\n    for (var i = 0;i<129; i++) {\n      var sli = self.place_color[i]\n      if(name == sli['place']){\n        var senti = sli['senti']\n        if(senti<0.52){\n          res = 0\n        }\n        else if ((senti>0.51)&(senti<0.59)){res = 1}\n        else if ((senti>0.58)&(senti<0.65)){res = 2}\n        else if ((senti>0.64)&(senti<0.72)){res = 3}\n        else if ((senti>0.71)){res = 4}\n      }\n    }\n    return res\n  }\n  this.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n  this.myCircle.attr(\"opacity\",function(d){\n    var id = choose_id(d)\n    if(self.hover_period==6){\n       return 0.7\n    }\n    if(id==self.hover_period){\n      return 1\n    }\n    else{return 0}\n  })\n  this.myLink.style(\"opacity\",function(){\n    if(self.hover_period==6){ return 0.4}\n    else{return 0}\n  })},\nGet_Predict(predict){\n  this.g1_5.selectAll(\"*\").remove()\n  var position = predict['Behavior']\n  if (predict['type']=='Brush'){\n    console.log(position)\n    var x_1 = position['x_position1']\n    var y_1 = position['y_position1']\n    var x_2 = position['x_position2']\n    var y_2 = position['y_position2']\n    this.g1_5.append('rect')\n  .attr('x', x_1)\n  .attr('y', y_1)\n  .attr('width', x_2-x_1)\n  .attr('height', y_2-y_1)\n  .attr('stroke', 'black')\n  .attr(\"opacity\",0.1)\n  .attr('fill', '#69a3b2');\n  }\n  \n  else if (predict['type']=='Zoom'){\n    var scale = position['scale']\n    var delta_x = position['delta_x']\n    var delta_y = position['delta_y']\n    var width_rec = 500/scale\n    var height_rec = 640/scale\n    var x1 = -delta_x\n    var y1 = -delta_y\n        this.g1_5.append('rect')\n  .attr('x', x1)\n  .attr('y', y1)\n  .attr('width', width_rec)\n  .attr('height', height_rec)\n  .attr('stroke', 'black')\n  .attr(\"opacity\",0.1)\n  .attr('fill', '#69a3b2');}\n  \n  else if (predict['type']=='Hover'){\n    console.log('this.v_path',this.v_path)\n    //else if (predict['type']=='Click'){result2 ='Click'}\n  }\n\n\n}\n\n}}\n</script>\n<style>\n\n.selected_first {\n  stroke: black;\n  stroke-width: 1px;\n}\n.selected_second {\n  opacity: 1;\n  stroke: black;\n  stroke-width: 1px;\n  fill: orange;\n}\n.subunit.SCT { fill: #ddc; }\n.subunit.WLS { fill: #cdd; }\n.subunit.NIR { fill: #cdc; }\n.subunit.ENG { fill: #dcd; }\n\n.subunit.IRL,\n.subunit-label.IRL {\n  display: none;\n}\n\n.subunit-boundary {\n  fill: none;\n  stroke: #777;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n}\n\n.subunit-boundary.IRL {\n  stroke: #aaa;\n}\n\n.subunit-label {\n  fill: #777;\n  fill-opacity: .5;\n  font-size: 20px;\n  font-weight: 300;\n  text-anchor: middle;\n}\n.place-point\n.place\n.place-label {\n  fill: #444;\n}\n\ntext {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 10px;\n  pointer-events: none;\n}\n#label {\n  position: absolute;\n  left: 10px;\n  font-weight: 100;\n  font-family: \"Proxima Nova\", \"Montserrat\", sans-serif;\n}\n\n.hover {\n    fill: yellow;   \n}\n.desplegable {\n        left: 10px;\n        top: 5px;\n    }\n/*\n#sliderContainer {\n    text-align: center;\n    top: 600px;\n    left:10px;\n}\n#histplot{\n    text-align: center;\n    top: 600px;\n    left:10px;\n}\n#map {\n    top: 2000px;\n    left:1000px;\n}\n*/\n</style>"],"sourceRoot":"src/components"}]}