{"remainingRequest":"/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/babel-loader/lib/index.js!/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/src/components/Hist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/src/components/Hist.vue","mtime":1617178985000},{"path":"/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/tiffanyli/Desktop/GraduateStudy/CHI22/museum_vis 2/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Hist.vue"],"names":[],"mappings":";;;;;;;;;;;AASA,OAAA,KAAA,EAAA,MAAA,IAAA;AACA,OAAA,GAAA,MAAA,kBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,SADA;AAEA,MAAA,GAAA,EAAA,SAFA;AAGA,MAAA,CAAA,EAAA,SAHA;AAIA,MAAA,CAAA,EAAA,SAJA;AAKA,MAAA,KAAA,EAAA,SALA;AAMA,MAAA,CAAA,EAAA,SANA;AAOA,MAAA,OAAA,EAAA,SAPA;AAQA,MAAA,qBAAA,EAAA,SARA;AASA,MAAA,IAAA,EAAA,SATA;AAUA,MAAA,QAAA,EAAA;AAVA,KAAA;AAYA,GAfA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,GAAA;AAAA,KADA,GAEA,GAAA,CAAA,GAAA,CAAA,UAAA,EAAA,UAAA,GAAA,EAAA;AACA,MAAA,KAAA,CAAA,gBAAA,CAAA,GAAA;AAAA,KADA,CAFA;AAIA,GArBA;AAsBA,EAAA,OAtBA,qBAsBA;AACA,SAAA,YAAA;AACA,SAAA,MAAA;AACA,GAzBA;AA0BA;AACA;AACA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,MAAA,EAAA,kBAAA;AAAA;;AACA,MAAA,GAAA,CAAA,GAAA,CAAA,iBAAA,EAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,IAAA,GAAA,GAAA;;AACA,QAAA,MAAA,CAAA,UAAA;AACA,OAHA;AAIA,MAAA,GAAA,CAAA,GAAA,CAAA,aAAA,EAAA,UAAA,GAAA,EAAA;AAAA,QAAA,MAAA,CAAA,WAAA,CAAA,GAAA;AAAA,OAAA;AAAA,KANA;AAOA,IAAA,YAPA,0BAOA;AAAA;;AACA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,UAAA,GAAA,GAAA,EAAA;AACA,UAAA,MAAA,GAAA,CAAA,GAAA,EAAA,GAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,E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AAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,E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","sourcesContent":["/* eslint-disable */\n<template>\n  <div id=\"hist\">\n     <p>\n      <h4>  Distribution of visit against age</h4>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Bus from '../assets/bus.js';\n\nexport default {\n  name: \"App\",\n  data(){\n    return{\n      data:undefined,\n      svg:undefined,\n      x:undefined,\n      y:undefined,\n      yAxis:undefined,\n      u:undefined,\n      height1:undefined,\n      select_data_from_hist:undefined,\n      g1_5:undefined,\n      vertices:''\n    }\n  },\n  created(){\n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val;}),\n    Bus.$on(\"New_Poet\", (val) => {\n                this.update_over_hist(val);})\n  },\n  mounted() {\n    this.generateHist();\n    this.handle()\n  },\n  //watch:{handle(newval){\n    //this.age=newval,\n    //this.generateHist()}},\n  methods: {\n    handle: function () {\n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val;\n                this.updatehist()\n              })\n    Bus.$on(\"Get_Predict\",(val) => {this.Get_Predict(val)})},\n    generateHist() {\n      //let age = this.$root.age_select\n      var min = 18;\n      var max = 68;\n      var domain = [min,max];\n      var a = [19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,30,30,30,30,30,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,41,41,41,41,41,41,41,41,41,41,41,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,53,53,53,53,53,53,53,53,53,53,53,53,53,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,61,61,61,61,61,61,61,61,61,61,62,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65]\n      var margin = { top: 5, right: 5, bottom: 30, left: 30 },\n        width1 = 400 - margin.left - margin.right\n      this.height1 = 280 - margin.top - margin.bottom;\n      const svg1 = d3\n        .select(\"#hist\")\n        .append(\"svg\")\n        .attr(\"width\", width1 + margin.left + margin.right)\n        .attr(\"height\", this.height1 + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        var x = d3\n          .scaleLinear()\n          .domain(domain) \n          .range([0, width1]); \n\n        svg1.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height1 + \")\")\n          .call(d3.axisBottom(x));\n          // Y axis: initialization\n        var y = d3.scaleLinear()\n          .range([this.height1, 0]);\n        this.yAxis = svg1.append(\"g\")\n        var nBin=20\n        var histogram = d3\n          .histogram()\n          .domain(x.domain()) // then the domain of the graphic\n          .thresholds(x.ticks(nBin)); // then the numbers of bins\n\n        // And apply this function to data to get the bins\n        var bins = histogram(a);\n        // Add the svg element to the body and set the dimensions and margins of the graph\n\n        y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n        this.yAxis\n        .transition()\n        .duration(1000)\n        .call(d3.axisLeft(y));\n        this.u = svg1\n          .selectAll(\"rect\")\n          .data(bins)\n\n        this.u.enter()\n          .append(\"rect\")\n          .attr(\"x\", 1)\n          .merge(this.u)\n          .transition()\n          .attr(\"height\", (d)=>this.height1 - y(d.length))\n          .attr(\"transform\", function(d) { \n            return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n          })\n          .attr(\"width\", function(d) {\n            return x(d.x1) - x(d.x0) - 1})\n          .attr(\"fill\", \"#6495ED\")\n          this.x = x\n          this.y = y\n          this.svg = svg1\n                var g1_5 = svg1.append(\"g\").attr(\"id\",\"for_interaction_suggestion\");\n        this.g1_5 = g1_5}, \nupdate_over_hist(author){\n//let self = this\n//var all_data = this.data\n\nvar svg1 = this.svg\nvar x = this.x\nvar y = this.y\n// The number of bins \nvar nBin=20\nvar histogram = d3\n  .histogram()\n  .domain(x.domain()) // then the domain of the graphic\n  .thresholds(x.ticks(nBin)); // then the numbers of bins\nif(author=='Su Shi'){\nvar a = [19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,30,30,30,30,30,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,41,41,41,41,41,41,41,41,41,41,41,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,53,53,53,53,53,53,53,53,53,53,53,53,53,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,61,61,61,61,61,61,61,61,61,61,62,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65]}\nelse if (author=='Huang Tingjian'){\n  a = [1, 15, 19, 19, 22, 22, 23, 23, 24, 28, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 36, 37, 37, 37, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 40, 40, 41, 41, 41, 47, 47, 47, 49, 49, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, 51, 51, 51, 51, 54, 54, 54, 56, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 58, 59, 59, 60, 60, 60, 60, 60, 60, 60, 60]}\nelse if (author=='Ouyang Xiu'){\n  a = [1, 4, 4, 5, 6, 20, 20, 21, 21, 21, 21, 21, 21, 21, 22, 22, 24, 25, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 33, 33, 33, 33, 34, 34, 34, 34, 36, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 42, 43, 43, 43, 44, 46, 47, 47, 47, 48, 48, 49, 49, 49, 49, 50, 50, 50, 61, 61, 62, 62, 62, 64, 64, 65]}\nelse if (author == 'Xin Qiji'){\n  a = [1, 15, 16, 18, 19, 23, 25, 26, 29, 31, 33, 34, 35, 36, 38, 39, 39, 39, 39, 39, 40, 40, 41, 41, 42, 43, 47, 47, 47, 48, 52, 52, 53, 53, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 56, 56, 56, 57, 64, 65, 65, 66, 66, 67, 68, 68]\n}\nconsole.log(a)\n// And apply this function to data to get the bins\nvar bins = histogram(a);\n// Add the svg element to the body and set the dimensions and margins of the graph\ny.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\nthis.yAxis\n.transition()\n.duration(1000)\n.call(d3.axisLeft(y));\n\nthis.u = svg1\n  .selectAll(\"rect\")\n  .data(bins)\n\n  this.u.enter()\n  .append(\"rect\")\n  .attr(\"x\", 1)\n  .merge(this.u)\n  .transition()\n  .attr('height', (d)=>this.height1 - y(d.length))\n  .attr(\"transform\", function(d) { \n    return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n  })\n  .attr(\"width\", function(d) {\n    return x(d.x1) - x(d.x0) - 1})\n  .attr(\"fill\", \"#6495ED\")\n\n},\nupdatehist(){\n  this.g1_5.selectAll(\"*\").remove()\nlet self = this\nvar all_data = this.data\nvar age = []\nfor(var i=0, len=this.data.length-1; i<len; i++){\n  var d = this.data[i]\n  age.push(parseInt(d.properties.age))}\nvar svg1 = this.svg\nvar x = this.x\nvar y = this.y\n// The number of bins \nvar nBin=20\nvar histogram = d3\n  .histogram()\n  .domain(x.domain()) // then the domain of the graphic\n  .thresholds(x.ticks(nBin)); // then the numbers of bins\n\n// And apply this function to data to get the bins\nvar bins = histogram(age);\n// Add the svg element to the body and set the dimensions and margins of the graph\ny.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\nthis.yAxis\n.transition()\n.duration(1000)\n.call(d3.axisLeft(y));\n\nthis.u = svg1\n  .selectAll(\"rect\")\n  .data(bins)\n\n  this.u.enter()\n  .append(\"rect\")\n  .attr(\"x\", 1)\n  .merge(this.u)\n  .transition()\n  .attr('height', (d)=>this.height1 - y(d.length))\n  .attr(\"transform\", function(d) { \n    return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n  })\n  .attr(\"width\", function(d) {\n    return x(d.x1) - x(d.x0) - 1})\n  .attr(\"fill\", \"#6495ED\")\n  .attr(\"id\",function(d,i){\n    return [18+i*2,i]\n  })\nvar se = []\nvar vertices = []\nfor (i = 0, len = bins.length; i < len; i++) {\n  d = bins[i]\n  se.push({'coordinates':[x(d.x0),y(d.length)]})\n  if(y(d.length)<245){\n    vertices.push(i)\n  }\n}\nself.vertices = se\nself.GLOBAL.Visual_state['Hist']['overall'] = se\nself.GLOBAL.Visual_state['Hist']['visit'] = []\n\nvar select_age_by_column = []\nthis.u.on(\"click\",function(){\n    var that = this\n    var age = that.id.split(\",\")[0]\n    console.log('age11',that.id)\n    var index = that.id.split(\",\")[1]\n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    self.GLOBAL.Visual_state['Hist']['visit'].push([age,index])\n    Bus.$emit(\"change\", self.GLOBAL.Visual_state['Hist'])\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,\"click-hist-index\",index,'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time}\n    select_age_by_column = parseInt(age)\n    console.log('select_age_by_column',select_age_by_column)\n    d3.select(that)\n    .transition()\n    .duration(500)\n    .attr(\"fill\", \"orange\");\nvar select_data_from_hist = []\nfor(i=0, len=all_data.length-1; i<len; i++){\n  d = parseInt(all_data[i].properties.age)\n    if(d<select_age_by_column+2){\n      if (d>parseInt(select_age_by_column)-1){\n      select_data_from_hist.push(all_data[i])\n    }}\n  }\nconsole.log('age',select_age_by_column)\nBus.$emit(\"Hist_select_data\", select_data_from_hist)\nconsole.log('select_data_from_hist',select_data_from_hist)\n})\nthis.u.on(\"mouseout\", function(){\n  d3.select(this)\n    .transition()\n    .duration(500)\n    .attr(\"fill\", \"#6495ED\");\n})\n},\nGet_Predict(predict_all){\n  \n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    if (predict['type']=='Click'){\n      if(predict['Object_View']=='Hist'){\n        console.log('herehere')\n        var number = position['number']\n        console.log('number',number)\n        var dist = 0\n        var min_dist = Number.POSITIVE_INFINITY\n        var diss = 0\n        console.log('this.vertices',this.vertices)\n        for(i in this.vertices){\n          var d = this.vertices[i].coordinates[0]/15.234\n          console.log('d',d)\n          dist = (number-d)**2\n          if (dist<min_dist){\n            diss = this.vertices[i].coordinates\n            min_dist = dist\n          }\n        }\n        console.log('diss',diss)\n        if(diss[1]!=245){\n        this.g1_5.append(\"path\")\n        .attr(\"d\", d3.symbol().type(d3.symbolStar).size(100))\n        .attr(\"fill\", \"orange\")\n        .attr(\"transform\",\"translate(\"+diss[0]+\",\"+diss[1]+\")\")\n\n        }\n\n  /*\n  .attr('cx', diss*15.2)\n  .attr('cy', 245)\n  .attr('r', 7)\n  .attr('stroke', 'black')\n  .attr(\"stroke-width\",'4px')\n  .attr(\"opacity\",1)\n  .attr('fill', '#69a3b2');\n*/\n\n\n      }\n\n}\n}\n}\n}}\n\n</script>"],"sourceRoot":"src/components"}]}