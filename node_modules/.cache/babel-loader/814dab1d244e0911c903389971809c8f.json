{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Force.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Force.vue","mtime":1617180576411},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0ICogYXMgZDMgZnJvbSAiZDMiOyAvL2ltcG9ydCAqIGFzIHRvcG9qc29uIGZyb20gInRvcG9qc29uIgoKaW1wb3J0IEJ1cyBmcm9tICcuLi9hc3NldHMvYnVzLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJBcHAiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhOiB1bmRlZmluZWQsCiAgICAgIHBsYWNlOiBbXSwKICAgICAgYWxsX3BsYWNlczoge30sCiAgICAgIHN2ZzI6IHVuZGVmaW5lZCwKICAgICAgd2lkdGgyOiB1bmRlZmluZWQsCiAgICAgIGhlaWdodDI6IHVuZGVmaW5lZCwKICAgICAgSGlzdF9zZWxlY3RfZGF0YTogJycsCiAgICAgIG5vZGVFbGVtZW50czogdW5kZWZpbmVkLAogICAgICB2ZXJ0aWNlczogJycKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5oYW5kbGUoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZTogZnVuY3Rpb24gaGFuZGxlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgQnVzLiRvbigiU3RhcnRfUGxhY2UiLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuZ2VuZXJhdGVGb3JjZSgpOwogICAgICB9KSwgQnVzLiRvbigiTWFwX3NlbGVjdF9kYXRhIiwgZnVuY3Rpb24gKHZhbCkgewogICAgICAgIF90aGlzLmRhdGEgPSB2YWw7CgogICAgICAgIF90aGlzLnVwZGF0ZUZvcmNlKCk7CiAgICAgIH0pLCBCdXMuJG9uKCJIaXN0X3NlbGVjdF9kYXRhIiwgZnVuY3Rpb24gKHZhbCkgewogICAgICAgIF90aGlzLkhpc3Rfc2VsZWN0X2RhdGEgPSB2YWw7CgogICAgICAgIF90aGlzLnNlbGVjdF9uZXdfcG9pbnQoKTsKICAgICAgfSk7CiAgICAgIEJ1cy4kb24oIkdldF9QcmVkaWN0IiwgZnVuY3Rpb24gKHZhbCkgewogICAgICAgIF90aGlzLkdldF9QcmVkaWN0KHZhbCk7CiAgICAgIH0pOwogICAgfSwKICAgIGdlbmVyYXRlRm9yY2U6IGZ1bmN0aW9uIGdlbmVyYXRlRm9yY2UoKSB7CiAgICAgIHZhciBkYXRhX3BsYWNlID0gW107CiAgICAgIHZhciB3aWR0aDIgPSA0MDAsCiAgICAgICAgICBoZWlnaHQyID0gMjg1OwogICAgICB0aGlzLndpZHRoMiA9IHdpZHRoMjsKICAgICAgdGhpcy5oZWlnaHQyID0gaGVpZ2h0MjsKICAgICAgdmFyIHN2ZzIgPSBkMy5zZWxlY3QoIiNmb3JjZSIpLmFwcGVuZCgic3ZnIik7CiAgICAgIHN2ZzIuYXR0cigid2lkdGgiLCB3aWR0aDIpLmF0dHIoImhlaWdodCIsIGhlaWdodDIpOyAvLyBjZW50ZXIgbWFya2VyCgogICAgICBzdmcyLmFwcGVuZCgnY2lyY2xlJykuYXR0cigncicsIDMpLmF0dHIoJ2N4Jywgd2lkdGgyIC8gMikuYXR0cignY3knLCBoZWlnaHQyIC8gMik7CiAgICAgIHRoaXMuc3ZnMiA9IHN2ZzI7CiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgLyoKICAgICAgZDMuanNvbigic3VzaGlfbWFwLmpzb24iLCBmdW5jdGlvbihlcnJvciwgcG9pbnQpIHsKICAgICAgICBjb25zdCBwbGFjZXNfYWxsID0gdG9wb2pzb24uZmVhdHVyZShwb2ludCwgcG9pbnQub2JqZWN0cy5wbGFjZXMpCiAgICAgICovCgogICAgICB2YXIgcGxhY2VzX2FsbCA9IHNlbGYuR0xPQkFMLnBsYWNlX25vdzsKICAgICAgdmFyIG5vZGVzID0gW107CiAgICAgIHZhciBsaW5rcyA9IFtdOwoKICAgICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IGRhdGFfcGxhY2UubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICBub2Rlcy5wdXNoKHsKICAgICAgICAgICJuYW1lIjogZGF0YV9wbGFjZVtpXQogICAgICAgIH0pOwogICAgICB9CgogICAgICBmb3IgKGkgPSAxLCBsZW4gPSBwbGFjZXNfYWxsLmZlYXR1cmVzLmxlbmd0aCAtIDE7IGkgPCBsZW47IGkrKykgewogICAgICAgIC8vIChub3RlOiBsb29wIHVudGlsIGxlbmd0aCAtIDEgc2luY2Ugd2UncmUgZ2V0dGluZyB0aGUgbmV4dAogICAgICAgIC8vICBpdGVtIHdpdGggaSsxKQogICAgICAgIHZhciBwbGFjZTEgPSBwbGFjZXNfYWxsLmZlYXR1cmVzW2ldLnByb3BlcnRpZXMubmFtZS50b1N0cmluZygpOwogICAgICAgIHZhciBwbGFjZTIgPSBwbGFjZXNfYWxsLmZlYXR1cmVzW2kgKyAxXS5wcm9wZXJ0aWVzLm5hbWUudG9TdHJpbmcoKTsgLy8gaWYgKChwbGFjZTEgaW4gZGF0YSkmJihwbGFjZTIgaW4gZGF0YSkpewoKICAgICAgICB2YXIgYSA9IGNoZWNrX2luKGRhdGFfcGxhY2UsIHBsYWNlMSk7CiAgICAgICAgdmFyIGIgPSBjaGVja19pbihkYXRhX3BsYWNlLCBwbGFjZTIpOwoKICAgICAgICBpZiAoYSA9PSAiVFJVRSIgJiYgYiA9PSAiVFJVRSIpIHsKICAgICAgICAgIHZhciBpbmRleDEgPSBkYXRhX3BsYWNlLmZpbmRJbmRleChjaGVja19lcXVhbDEpOwogICAgICAgICAgdmFyIGluZGV4MiA9IGRhdGFfcGxhY2UuZmluZEluZGV4KGNoZWNrX2VxdWFsMik7CiAgICAgICAgICBsaW5rcy5wdXNoKHsKICAgICAgICAgICAgInNvdXJjZSI6IGluZGV4MSwKICAgICAgICAgICAgInRhcmdldCI6IGluZGV4MgogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBmdW5jdGlvbiBjaGVja19lcXVhbDEocGxhY2UpIHsKICAgICAgICByZXR1cm4gcGxhY2UudG9TdHJpbmcoKSA9PSBwbGFjZTE7CiAgICAgIH0KCiAgICAgIGZ1bmN0aW9uIGNoZWNrX2VxdWFsMihwbGFjZSkgewogICAgICAgIHJldHVybiBwbGFjZS50b1N0cmluZygpID09IHBsYWNlMjsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gY2hlY2tfaW4oZGF0YSwgcGxhY2UpIHsKICAgICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gcGxhY2VzX2FsbC5mZWF0dXJlcy5sZW5ndGggLSAxOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgIHZhciBkID0gZGF0YVtpXTsKCiAgICAgICAgICBpZiAoZCA9PSBwbGFjZSkgewogICAgICAgICAgICByZXR1cm4gJ1RSVUUnOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICdGYWxzZSc7CiAgICAgIH0KCiAgICAgIHZhciBsaW5rRWxlbWVudHMgPSBzdmcyLnNlbGVjdEFsbCgpLmRhdGEobGlua3MpLmVudGVyKCkuYXBwZW5kKCdsaW5lJykuYXR0cignc3Ryb2tlJywgJ2JsYWNrJykuYXR0cignc3Ryb2tlLXdpZHRoJywgJzJweCcpOwogICAgICBzZWxmLm5vZGVFbGVtZW50cyA9IHN2ZzIuc2VsZWN0QWxsKCkuZGF0YShub2RlcykuZW50ZXIoKS5hcHBlbmQoJ2NpcmNsZScpLmF0dHIoJ3InLCA1KS5hdHRyKCdmaWxsJywgJ3JlZCcpOwogICAgICB2YXIgdGV4dEVsZW1lbnRzID0gc3ZnMi5zZWxlY3RBbGwoKS5kYXRhKG5vZGVzKS5lbnRlcigpLmFwcGVuZCgndGV4dCcpLnRleHQoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS5uYW1lOwogICAgICB9KS5hdHRyKCdmb250LXNpemUnLCAxNSkuYXR0cignZHgnLCAxNSkuYXR0cignZHknLCA0KTsKICAgICAgdmFyIHNpbXVsYXRpb24gPSBkMy5mb3JjZVNpbXVsYXRpb24oKS5mb3JjZSgnbGluaycsIGQzLmZvcmNlTGluaygpLmRpc3RhbmNlKDgwKSkuZm9yY2UoJ2NoYXJnZScsIGQzLmZvcmNlTWFueUJvZHkoKSkuZm9yY2UoJ2NlbnRlcicsIGQzLmZvcmNlQ2VudGVyKHdpZHRoMiAvIDIsIGhlaWdodDIgLyAyKSk7CiAgICAgIHNpbXVsYXRpb24ubm9kZXMobm9kZXMpLm9uKCd0aWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgIGxpbmtFbGVtZW50cy5hdHRyKCd4MScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UueDsKICAgICAgICB9KS5hdHRyKCd5MScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UueTsKICAgICAgICB9KS5hdHRyKCd4MicsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC50YXJnZXQueDsKICAgICAgICB9KS5hdHRyKCd5MicsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC50YXJnZXQueTsKICAgICAgICB9KTsKICAgICAgICBzZWxmLm5vZGVFbGVtZW50cy5hdHRyKCdjeCcsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICByZXR1cm4gbm9kZS54OwogICAgICAgIH0pLmF0dHIoJ2N5JywgZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgIHJldHVybiBub2RlLnk7CiAgICAgICAgfSk7CiAgICAgICAgdGV4dEVsZW1lbnRzLmF0dHIoJ3gnLCBmdW5jdGlvbiAobm9kZSkgewogICAgICAgICAgcmV0dXJuIG5vZGUueDsKICAgICAgICB9KS5hdHRyKCd5JywgZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgIHJldHVybiBub2RlLnk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgICBzaW11bGF0aW9uLmZvcmNlKCdsaW5rJykubGlua3MobGlua3MpOwogICAgICAvKgogICAgICBmdW5jdGlvbiBkcmFnc3RhcnRlZChkKSB7CiAgICAgICAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwLjMpLnJlc3RhcnQoKTsKICAgICAgICAgIGQuZnggPSBkLng7CiAgICAgICAgICBkLmZ5ID0gZC55OwogICAgICB9CiAgICAgIAogICAgICBmdW5jdGlvbiBkcmFnZ2VkKGQpIHsKICAgICAgICAgIGQuZnggPSBkMy5ldmVudC54OwogICAgICAgICAgZC5meSA9IGQzLmV2ZW50Lnk7CiAgICAgIH0KICAgICAgCiAgICAgIGZ1bmN0aW9uIGRyYWdlbmRlZChkKSB7CiAgICAgICAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTsKICAgICAgICAgIGQuZnggPSBudWxsOwogICAgICAgICAgZC5meSA9IG51bGw7CiAgICAgIH0KICAgICAgKi8KICAgIH0sCiAgICB1cGRhdGVGb3JjZTogZnVuY3Rpb24gdXBkYXRlRm9yY2UoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsKCiAgICAgIGZ1bmN0aW9uIHVuaXF1ZShhcnIpIHsKICAgICAgICByZXR1cm4gYXJyLmZpbHRlcihmdW5jdGlvbiAoaXRlbSwgaW5kZXgsIGFycikgewogICAgICAgICAgLy8g5Y+W5Ye65YWD57SgLCDor6XlhYPntKDlnKjmlbDnu4TkuK3nrKzkuIDmrKHlh7rnjrDnmoTntKLlvJUgPT09IOW9k+WJjee0ouW8leWAvAogICAgICAgICAgcmV0dXJuIGFyci5pbmRleE9mKGl0ZW0sIDApID09PSBpbmRleDsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gY291bnRUaW1lcyhkYXRhKSB7CiAgICAgICAgcmV0dXJuIGRhdGEucmVkdWNlKGZ1bmN0aW9uICh0aW1lLCBuYW1lKSB7CiAgICAgICAgICBpZiAobmFtZSBpbiB0aW1lKSB7CiAgICAgICAgICAgIHRpbWVbbmFtZV0rKzsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRpbWVbbmFtZV0gPSAxOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiB0aW1lOwogICAgICAgIH0sIHt9KTsKICAgICAgfQoKICAgICAgdmFyIGRhdGFfc2VsZWN0ID0gW107CiAgICAgIHZhciBkYXRhX3NlbGVjdDEgPSBbXTsKICAgICAgdmFyIHBsYWNlX2NvdW50ID0gW107CgogICAgICBmb3IgKHZhciBpID0gMCwgbGVuID0gdGhpcy5kYXRhLmxlbmd0aCAtIDE7IGkgPCBsZW47IGkrKykgewogICAgICAgIHZhciBkID0gdGhpcy5kYXRhW2ldOwogICAgICAgIGRhdGFfc2VsZWN0MS5wdXNoKGQucHJvcGVydGllcy5uYW1lLnRvU3RyaW5nKCkpOwogICAgICB9CgogICAgICBkYXRhX3NlbGVjdCA9IHVuaXF1ZShkYXRhX3NlbGVjdDEpOwogICAgICBwbGFjZV9jb3VudCA9IGNvdW50VGltZXMoZGF0YV9zZWxlY3QxKTsKICAgICAgdmFyIG1heF9jb3VudCA9IDA7CgogICAgICBmb3IgKGkgaW4gcGxhY2VfY291bnQpIHsKICAgICAgICB2YXIgaXRlbSA9IHBsYWNlX2NvdW50W2ldOwoKICAgICAgICBpZiAoaXRlbSA+IG1heF9jb3VudCkgewogICAgICAgICAgbWF4X2NvdW50ID0gaXRlbTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHZhciBoZWlnaHQyID0gdGhpcy5oZWlnaHQyOwogICAgICB2YXIgd2lkdGgyID0gdGhpcy53aWR0aDI7CiAgICAgIHZhciBzdmcyID0gdGhpcy5zdmcyOwogICAgICB2YXIgcGxhY2VzX2FsbCA9IHNlbGYuR0xPQkFMLnBsYWNlX25vdzsKICAgICAgc3ZnMi5zZWxlY3RBbGwoIioiKS5yZW1vdmUoKTsKICAgICAgdGhpcy5nMV81ID0gc3ZnMi5hcHBlbmQoImciKS5hdHRyKCJpZCIsICJmb3JfaW50ZXJhY3Rpb25fc3VnZ2VzdGlvbiIpOwogICAgICBzdmcyLmFwcGVuZCgnY2lyY2xlJykuYXR0cigncicsIDUpLmF0dHIoJ2N4Jywgd2lkdGgyIC8gMikuYXR0cignY3knLCBoZWlnaHQyIC8gMik7CiAgICAgIHZhciBub2RlcyA9IFtdOwogICAgICB2YXIgbGlua3MgPSBbXTsKCiAgICAgIGZvciAoaSA9IDAsIGxlbiA9IGRhdGFfc2VsZWN0Lmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgbm9kZXMucHVzaCh7CiAgICAgICAgICAibmFtZSI6IGRhdGFfc2VsZWN0W2ldCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIGZvciAoaSA9IDEsIGxlbiA9IHBsYWNlc19hbGwuZmVhdHVyZXMubGVuZ3RoIC0gMTsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgLy8gKG5vdGU6IGxvb3AgdW50aWwgbGVuZ3RoIC0gMSBzaW5jZSB3ZSdyZSBnZXR0aW5nIHRoZSBuZXh0CiAgICAgICAgLy8gIGl0ZW0gd2l0aCBpKzEpCiAgICAgICAgdmFyIHBsYWNlMSA9IHBsYWNlc19hbGwuZmVhdHVyZXNbaV0ucHJvcGVydGllcy5uYW1lLnRvU3RyaW5nKCk7CiAgICAgICAgdmFyIHBsYWNlMiA9IHBsYWNlc19hbGwuZmVhdHVyZXNbaSArIDFdLnByb3BlcnRpZXMubmFtZS50b1N0cmluZygpOyAvLyBpZiAoKHBsYWNlMSBpbiBkYXRhKSYmKHBsYWNlMiBpbiBkYXRhKSl7CgogICAgICAgIHZhciBhID0gY2hlY2tfaW4oZGF0YV9zZWxlY3QsIHBsYWNlMSk7CiAgICAgICAgdmFyIGIgPSBjaGVja19pbihkYXRhX3NlbGVjdCwgcGxhY2UyKTsKCiAgICAgICAgaWYgKGEgPT0gIlRSVUUiICYmIGIgPT0gIlRSVUUiKSB7CiAgICAgICAgICB2YXIgaW5kZXgxID0gZGF0YV9zZWxlY3QuZmluZEluZGV4KGNoZWNrX2VxdWFsMSk7CiAgICAgICAgICB2YXIgaW5kZXgyID0gZGF0YV9zZWxlY3QuZmluZEluZGV4KGNoZWNrX2VxdWFsMik7CiAgICAgICAgICBsaW5rcy5wdXNoKHsKICAgICAgICAgICAgInNvdXJjZSI6IGluZGV4MSwKICAgICAgICAgICAgInRhcmdldCI6IGluZGV4MgogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBmdW5jdGlvbiBjaGVja19pbihkYXRhLCBwbGFjZSkgewogICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBwbGFjZXNfYWxsLmZlYXR1cmVzLmxlbmd0aCAtIDE7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgdmFyIGQgPSBkYXRhW2ldOwoKICAgICAgICAgIGlmIChkID09IHBsYWNlKSB7CiAgICAgICAgICAgIHJldHVybiAnVFJVRSc7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gJ0ZhbHNlJzsKICAgICAgfQoKICAgICAgdmFyIHZpc2l0ZWQgPSBbXTsgLy92YXIgc2VsZWN0X3BsYWNlX2Zyb21fZm9yY2UgPSBbXQoKICAgICAgdmFyIGxpbmtFbGVtZW50cyA9IHN2ZzIuc2VsZWN0QWxsKCkuZGF0YShsaW5rcykuZW50ZXIoKS5hcHBlbmQoJ2xpbmUnKS5hdHRyKCdzdHJva2UnLCAnYmxhY2snKS5hdHRyKCdzdHJva2Utd2lkdGgnLCAnMnB4Jyk7CiAgICAgIHNlbGYubm9kZUVsZW1lbnRzID0gc3ZnMi5zZWxlY3RBbGwoKS5kYXRhKG5vZGVzKS5lbnRlcigpLmFwcGVuZCgnY2lyY2xlJykuYXR0cigncicsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgcmV0dXJuIDggKiAocGxhY2VfY291bnRbbm9kZS5uYW1lXSArIDQpIC8gKDUgKyBtYXhfY291bnQpOwogICAgICB9KS5hdHRyKCdpZCcsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgcmV0dXJuIG5vZGUubmFtZTsKICAgICAgfSkuYXR0cignZmlsbCcsICcjNjQ5NUVEJykub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgICAgZDMuc2VsZWN0KHRoYXQpLmF0dHIoImZpbGwiLCAnb3JhbmdlJyk7CiAgICAgICAgc2VsZi5HTE9CQUwuTmV3X3RpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDA7CgogICAgICAgIGlmIChzZWxmLkdMT0JBTC5OZXdfdGltZSAtIHNlbGYuR0xPQkFMLk9sZF90aW1lID4gMSkgewogICAgICAgICAgdmlzaXRlZC5wdXNoKHRoYXQpOwogICAgICAgICAgc2VsZi5HTE9CQUwuVmlzdWFsX3N0YXRlWydGb3JjZSddWyd2aXNpdGVkJ10gPSB2aXNpdGVkOwogICAgICAgICAgQnVzLiRlbWl0KCJjaGFuZ2UiLCBzZWxmLkdMT0JBTC5WaXN1YWxfc3RhdGUpOwogICAgICAgICAgc2VsZi5HTE9CQUwuTG9nX2ZpbGUucHVzaChbJ3RpbWVzdGFtcCcsIHNlbGYuR0xPQkFMLk5ld190aW1lLCAnaG92ZXItZm9yY2UtcG9zaXRpb24nLCBkMy5tb3VzZSh0aGlzKSwgdGhhdC5pZCwgJ1xuJ10pOwogICAgICAgICAgc2VsZi5wb3N0SW50ZXJhY3Rpb24oewogICAgICAgICAgICAnbmFtZSc6IHNlbGYuR0xPQkFMLkxvZ19maWxlCiAgICAgICAgICB9KTsKICAgICAgICAgIHNlbGYuR0xPQkFMLk9sZF90aW1lID0gc2VsZi5HTE9CQUwuTmV3X3RpbWU7CiAgICAgICAgfQoKICAgICAgICBCdXMuJGVtaXQoIkZvcmNlX3NlbGVjdF9kYXRhIiwgdGhhdC5pZCk7CiAgICAgIH0pLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICByZXR1cm4gc2VsZi5ub2RlRWxlbWVudHMuYXR0cignZmlsbCcsICcjNjQ5NUVEJyk7CiAgICAgIH0pOwogICAgICB2YXIgdGV4dEVsZW1lbnRzID0gc3ZnMi5zZWxlY3RBbGwoKS5kYXRhKG5vZGVzKS5lbnRlcigpLmFwcGVuZCgndGV4dCcpLnRleHQoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS5uYW1lOwogICAgICB9KS5hdHRyKCdmb250LXNpemUnLCAxMykuYXR0cignZHgnLCA4KS5hdHRyKCdkeScsIDQpOwogICAgICB2YXIgc2ltdWxhdGlvbiA9IGQzLmZvcmNlU2ltdWxhdGlvbigpLmZvcmNlKCdsaW5rJywgZDMuZm9yY2VMaW5rKCkuZGlzdGFuY2UoNTApKS5mb3JjZSgnY2hhcmdlJywgZDMuZm9yY2VNYW55Qm9keSgtMTAwKSkuZm9yY2UoJ2NlbnRlcicsIGQzLmZvcmNlQ2VudGVyKHdpZHRoMiAvIDIsIGhlaWdodDIgLyAyKSk7CiAgICAgIEJ1cy4kZW1pdCgnQnJ1c2hfdXBkYXRlJywgJ3N0YXJ0Jyk7CiAgICAgIHNpbXVsYXRpb24ubm9kZXMobm9kZXMpLm9uKCd0aWNrJywgZnVuY3Rpb24gKCkgewogICAgICAgIGxpbmtFbGVtZW50cy5hdHRyKCd4MScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UueDsKICAgICAgICB9KS5hdHRyKCd5MScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC5zb3VyY2UueTsKICAgICAgICB9KS5hdHRyKCd4MicsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC50YXJnZXQueDsKICAgICAgICB9KS5hdHRyKCd5MicsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC50YXJnZXQueTsKICAgICAgICB9KTsKICAgICAgICBzZWxmLm5vZGVFbGVtZW50cy5hdHRyKCdjeCcsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC54ID0gTWF0aC5tYXgoNSwgTWF0aC5taW4oc2VsZi53aWR0aDIgLSA0LCBkLngpKTsKICAgICAgICB9KS5hdHRyKCdjeScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgICByZXR1cm4gZC55ID0gTWF0aC5tYXgoNSwgTWF0aC5taW4oc2VsZi5oZWlnaHQyIC0gNCwgZC55KSk7CiAgICAgICAgfSk7CiAgICAgICAgdGV4dEVsZW1lbnRzLmF0dHIoJ3gnLCBmdW5jdGlvbiAobm9kZSkgewogICAgICAgICAgcmV0dXJuIG5vZGUueDsKICAgICAgICB9KS5hdHRyKCd5JywgZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICAgIHJldHVybiBub2RlLnk7CiAgICAgICAgfSk7CiAgICAgIH0pLm9uKCdlbmQnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmlzaXRlZCA9IFtdOwogICAgICAgIHZhciBzZSA9IFtdOwogICAgICAgIHZhciB2ZXJ0aWNlcyA9IFtdOwoKICAgICAgICBmb3IgKGkgPSAwLCBsZW4gPSBub2Rlcy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgdmFyIGQgPSBub2Rlc1tpXTsKICAgICAgICAgIHNlLnB1c2goewogICAgICAgICAgICAnY29vcmRpbmF0ZXMnOiBbZC54LCBkLnldLAogICAgICAgICAgICAncic6IDggKiAocGxhY2VfY291bnRbZC5uYW1lXSArIDQpIC8gKDUgKyBtYXhfY291bnQpLAogICAgICAgICAgICAnbmFtZSc6IGQubmFtZQogICAgICAgICAgfSk7CiAgICAgICAgICB2ZXJ0aWNlcy5wdXNoKFtkLngsIGQueV0pOwogICAgICAgIH0KCiAgICAgICAgc2VsZi52ZXJ0aWNlcyA9IHZlcnRpY2VzOwogICAgICAgIEJ1cy4kZW1pdCgnQnJ1c2hfdXBkYXRlJywgJ2ZpbnNpaCcpOwogICAgICAgIHNlbGYuR0xPQkFMLkZvcmNlX3N0YXRlLnB1c2goewogICAgICAgICAgJ0ZvcmNlJzogc2UKICAgICAgICB9KTsKICAgICAgICBzZWxmLkdMT0JBTC5WaXN1YWxfc3RhdGVbJ0ZvcmNlJ11bJ292ZXJhbGwnXSA9IHNlOwogICAgICAgIHNlbGYuR0xPQkFMLlZpc3VhbF9zdGF0ZVsnRm9yY2UnXVsndmlzaXQnXSA9IFtdOwogICAgICAgIEJ1cy4kZW1pdCgiY2hhbmdlIiwgc2VsZi5HTE9CQUwuVmlzdWFsX3N0YXRlKTsKICAgICAgfSk7CiAgICAgIHNpbXVsYXRpb24uZm9yY2UoJ2xpbmsnKS5saW5rcyhsaW5rcyk7CiAgICAgIC8qCiAgICAgIGNvbnNvbGUubG9nKG5vZGVzWzFdKQogICAgICBjb25zb2xlLmxvZyhzZWxmLm5vZGVFbGVtZW50cykKICAgICAgdmFyIHNlID0gW10KICAgICAgZm9yIChpID0gMCwgbGVuID0gc2VsZi5ub2RlRWxlbWVudHMuX2dyb3Vwcy5sZW5ndGg7IGkgPCBsZW47IGkrKykgewogICAgICAgIHZhciBkID1zZWxmLm5vZGVFbGVtZW50cy5fZ3JvdXBzWzBdW2ldLl9fZGF0YV9fCiAgICAgICAgY29uc29sZS5sb2coaSxkLGQueCxkLmlkKQogICAgICAgIHNlLnB1c2goeydjb29yZGluYXRlcyc6W2QueCxkLnldLCdyJzo4KihwbGFjZV9jb3VudFtkLm5hbWVdKzQpLyg1K21heF9jb3VudCksJ25hbWUnOmQubmFtZX0pCiAgICAgIH0KICAgICAgc2VsZi5HTE9CQUwuVmlzdWFsX3N0YXRlLnB1c2goeydGb3JjZSc6c2V9KQogICAgICBjb25zb2xlLmxvZyhzZWxmLkdMT0JBTC5WaXN1YWxfc3RhdGUpCiAgICAgIAogICAgICBmdW5jdGlvbiBkcmFnc3RhcnRlZChkKSB7CiAgICAgICAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwLjMpLnJlc3RhcnQoKTsKICAgICAgICAgIGQuZnggPSBkLng7CiAgICAgICAgICBkLmZ5ID0gZC55OwogICAgICB9CiAgICAgIAogICAgICBmdW5jdGlvbiBkcmFnZ2VkKGQpIHsKICAgICAgICAgIGQuZnggPSBkMy5ldmVudC54OwogICAgICAgICAgZC5meSA9IGQzLmV2ZW50Lnk7CiAgICAgIH0KICAgICAgCiAgICAgIGZ1bmN0aW9uIGRyYWdlbmRlZChkKSB7CiAgICAgICAgICBpZiAoIWQzLmV2ZW50LmFjdGl2ZSkgc2ltdWxhdGlvbi5hbHBoYVRhcmdldCgwKTsKICAgICAgICAgIGQuZnggPSBudWxsOwogICAgICAgICAgZC5meSA9IG51bGw7CiAgICAgIH0KICAgICAgKi8KCiAgICAgIGZ1bmN0aW9uIGNoZWNrX2VxdWFsMShwbGFjZSkgewogICAgICAgIHJldHVybiBwbGFjZS50b1N0cmluZygpID09IHBsYWNlMTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gY2hlY2tfZXF1YWwyKHBsYWNlKSB7CiAgICAgICAgcmV0dXJuIHBsYWNlLnRvU3RyaW5nKCkgPT0gcGxhY2UyOwogICAgICB9CiAgICB9LAogICAgc2VsZWN0X25ld19wb2ludDogZnVuY3Rpb24gc2VsZWN0X25ld19wb2ludCgpIHsKICAgICAgdmFyIGRhdGEgPSB0aGlzLkhpc3Rfc2VsZWN0X2RhdGE7CiAgICAgIHRoaXMubm9kZUVsZW1lbnRzLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBpc1NlbGVjdGVkQnlIaXN0KGQsIGRhdGEpOwoKICAgICAgICBmdW5jdGlvbiBpc1NlbGVjdGVkQnlIaXN0KGEsIGRhdGEpIHsKICAgICAgICAgIGZvciAodmFyIGkgPSAwLCBsZW4gPSBkYXRhLmxlbmd0aDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgIHZhciBwbGFjZSA9IGRhdGFbaV0ucHJvcGVydGllcy5uYW1lOwoKICAgICAgICAgICAgaWYgKGEubmFtZSA9PSBwbGFjZSkgewogICAgICAgICAgICAgIHJldHVybiAnb3JhbmdlJzsKICAgICAgICAgICAgfQogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybiAiIzY0OTVFRCI7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBHZXRfUHJlZGljdDogZnVuY3Rpb24gR2V0X1ByZWRpY3QocHJlZGljdF9hbGwpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBCdXMuJG9uKCdCcnVzaF91cGRhdGUnLCBmdW5jdGlvbiAodmFsKSB7CiAgICAgICAgaWYgKHZhbCA9PSAnZmluc2loJykgewogICAgICAgICAgX3RoaXMyLmcxXzUuc2VsZWN0QWxsKCIqIikucmVtb3ZlKCk7CgogICAgICAgICAgZm9yICh2YXIgaSBpbiBwcmVkaWN0X2FsbCkgewogICAgICAgICAgICB2YXIgcHJlZGljdCA9IHByZWRpY3RfYWxsW2ldOwogICAgICAgICAgICB2YXIgcG9zaXRpb24gPSBwcmVkaWN0WydCZWhhdmlvciddOwoKICAgICAgICAgICAgaWYgKHByZWRpY3RbJ3R5cGUnXSA9PSAnQ2xpY2snKSB7CiAgICAgICAgICAgICAgaWYgKHByZWRpY3RbJ09iamVjdF9WaWV3J10gPT0gJ0ZvcmNlJykgewogICAgICAgICAgICAgICAgdmFyIHhfcG9zaXRpb24gPSBwb3NpdGlvblsneF9wb3NpdGlvbiddOwogICAgICAgICAgICAgICAgdmFyIHlfcG9zaXRpb24gPSBwb3NpdGlvblsneV9wb3NpdGlvbiddOwogICAgICAgICAgICAgICAgdmFyIGRpc3QgPSAwOwogICAgICAgICAgICAgICAgdmFyIG1pbl9kaXN0ID0gTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZOwogICAgICAgICAgICAgICAgdmFyIGRpc3MgPSAwOwoKICAgICAgICAgICAgICAgIGZvciAoaSBpbiBfdGhpczIudmVydGljZXMpIHsKICAgICAgICAgICAgICAgICAgdmFyIGQgPSBfdGhpczIudmVydGljZXNbaV07CiAgICAgICAgICAgICAgICAgIGRpc3QgPSBNYXRoLnBvdyh4X3Bvc2l0aW9uIC0gZFswXSwgMikgKyBNYXRoLnBvdyh5X3Bvc2l0aW9uIC0gZFsxXSwgMik7CgogICAgICAgICAgICAgICAgICBpZiAoZGlzdCA8IG1pbl9kaXN0KSB7CiAgICAgICAgICAgICAgICAgICAgZGlzcyA9IGQ7CiAgICAgICAgICAgICAgICAgICAgbWluX2Rpc3QgPSBkaXN0OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMyLmcxXzUuYXBwZW5kKCdjaXJjbGUnKS5hdHRyKCdjeCcsIGRpc3NbMF0pLmF0dHIoJ2N5JywgZGlzc1sxXSkuYXR0cigncicsIDEwKS5hdHRyKCdmaWxsJywgJ3JlZCcpLmF0dHIoIm9wYWNpdHkiLCAxKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pLCBCdXMuJG9uKCdGb3JjZV9zZWxlY3RfZGF0YScsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuZzFfNS5zZWxlY3RBbGwoIioiKS5yZW1vdmUoKTsKCiAgICAgICAgZm9yICh2YXIgaSBpbiBwcmVkaWN0X2FsbCkgewogICAgICAgICAgdmFyIHByZWRpY3QgPSBwcmVkaWN0X2FsbFtpXTsKICAgICAgICAgIHZhciBwb3NpdGlvbiA9IHByZWRpY3RbJ0JlaGF2aW9yJ107CgogICAgICAgICAgaWYgKHByZWRpY3RbJ3R5cGUnXSA9PSAnQ2xpY2snKSB7CiAgICAgICAgICAgIGlmIChwcmVkaWN0WydPYmplY3RfVmlldyddID09ICdGb3JjZScpIHsKICAgICAgICAgICAgICB2YXIgeF9wb3NpdGlvbiA9IHBvc2l0aW9uWyd4X3Bvc2l0aW9uJ107CiAgICAgICAgICAgICAgdmFyIHlfcG9zaXRpb24gPSBwb3NpdGlvblsneV9wb3NpdGlvbiddOwogICAgICAgICAgICAgIHZhciBkaXN0ID0gMDsKICAgICAgICAgICAgICB2YXIgbWluX2Rpc3QgPSBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7CiAgICAgICAgICAgICAgdmFyIGRpc3MgPSAwOwoKICAgICAgICAgICAgICBmb3IgKGkgaW4gX3RoaXMyLnZlcnRpY2VzKSB7CiAgICAgICAgICAgICAgICB2YXIgZCA9IF90aGlzMi52ZXJ0aWNlc1tpXTsKICAgICAgICAgICAgICAgIGRpc3QgPSBNYXRoLnBvdyh4X3Bvc2l0aW9uIC0gZFswXSwgMikgKyBNYXRoLnBvdyh5X3Bvc2l0aW9uIC0gZFsxXSwgMik7CgogICAgICAgICAgICAgICAgaWYgKGRpc3QgPCBtaW5fZGlzdCkgewogICAgICAgICAgICAgICAgICBkaXNzID0gZDsKICAgICAgICAgICAgICAgICAgbWluX2Rpc3QgPSBkaXN0OwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX3RoaXMyLmcxXzUuYXBwZW5kKCdjaXJjbGUnKS5hdHRyKCdjeCcsIGRpc3NbMF0pLmF0dHIoJ2N5JywgZGlzc1sxXSkuYXR0cigncicsIDEwKS5hdHRyKCdmaWxsJywgJ3JlZCcpLmF0dHIoIm9wYWNpdHkiLCAxKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Force.vue"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */s\n<template>\n  <div id=\"force\">\n    <p>\n      <h4>  Places connection</h4>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n//import * as topojson from \"topojson\"\nimport Bus from '../assets/bus.js';\n\nexport default {\n  name: \"App\",\n  data(){\n    return{\n      data:undefined,\n      place:[],\n      all_places:{},\n      svg2:undefined,\n      width2 :undefined,\n      height2 : undefined,\n      Hist_select_data:'',\n      nodeElements:undefined,\n      vertices:''\n    }\n  },\n  mounted() {\n    this.handle()\n  },\n  methods: {\n    handle: function () {\n    Bus.$on(\"Start_Place\", () => {\n                this.generateForce()\n              }),  \n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val\n                this.updateForce()\n              }),\n    Bus.$on(\"Hist_select_data\", (val) => {\n                this.Hist_select_data = val\n                this.select_new_point()\n              })\n    Bus.$on(\"Get_Predict\",(val) => {this.Get_Predict(val)})\n  },\n    generateForce() {\nvar data_place = []\nvar width2 = 400,\n    height2 = 285;\nthis.width2 = width2\nthis.height2 = height2\nconst svg2 = d3.select(\"#force\").append(\"svg\")\n\n  svg2.attr(\"width\", width2)\n    .attr(\"height\", height2);\n\n// center marker\nsvg2.append('circle')\n    .attr('r', 3)\n    .attr('cx', width2 / 2)\n    .attr('cy', height2 / 2);\nthis.svg2 = svg2\nlet self = this\n/*\nd3.json(\"sushi_map.json\", function(error, point) {\n  const places_all = topojson.feature(point, point.objects.places)\n*/\nvar places_all = self.GLOBAL.place_now\nvar nodes = []\nvar links=[]\n    for(var i=0, len=data_place.length;i<len;i++){\n        nodes.push({\"name\":data_place[i]})\n      }\n    for(i=1, len=places_all.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n    var place1 = places_all.features[i].properties.name.toString()\n    var place2 = places_all.features[i+1].properties.name.toString()\n    // if ((place1 in data)&&(place2 in data)){\n    var a = check_in(data_place, place1)\n    var b = check_in(data_place, place2)\n    if((a==\"TRUE\") && (b==\"TRUE\")){\n      var index1 = data_place.findIndex(check_equal1)\n      var index2 = data_place.findIndex(check_equal2)\n      links.push({\"source\": index1, \"target\": index2})\n    }\n}\nfunction check_equal1(place){return place.toString()==place1}\nfunction check_equal2(place){return place.toString()==place2}\nfunction check_in(data, place){\n  for(var i=0, len=places_all.features.length-1; i<len; i++){\n    var d = data[i]\n    if(d== place){\n      return 'TRUE'\n    }}\n  return 'False'\n}\nvar linkElements = svg2.selectAll()\n        .data(links)\n        .enter()\n        .append('line')\n        .attr('stroke', 'black')\n        .attr('stroke-width', '2px');\nself.nodeElements = svg2.selectAll()\n        .data(nodes)\n        .enter()\n        .append('circle')\n        .attr('r', 5)\n        .attr('fill', 'red')\n\nvar textElements = svg2.selectAll()\n  .data(nodes)\n  .enter().append('text')\n    .text(node => node.name)\n    .attr('font-size', 15)\n    .attr('dx', 15)\n    .attr('dy', 4)\nconst simulation = d3.forceSimulation()\n          .force('link', d3.forceLink().distance(80))\n          .force('charge', d3.forceManyBody())\n          .force('center', d3.forceCenter(width2 / 2, height2 / 2));\n\nsimulation\n    .nodes(nodes)\n    .on('tick', () => {\n  linkElements\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y)\n  self.nodeElements\n    .attr('cx', node => node.x)\n    .attr('cy', node => node.y)\n  textElements\n    .attr('x', node => node.x)\n    .attr('y', node => node.y)\n})\n\nsimulation\n    .force('link')\n    .links(links);\n/*\nfunction dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n}\n\nfunction dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n}\n*/\n},\nupdateForce(){\n\n  let self = this\nfunction unique(arr) {\n    return arr.filter(function(item, index, arr) {\n      // 取出元素, 该元素在数组中第一次出现的索引 === 当前索引值\n      return arr.indexOf(item, 0) === index;\n    });\n}\nfunction countTimes(data) {\n    return data.reduce(function(time, name) {\n        if (name in time) {\n            time[name]++;\n        } else {\n            time[name] = 1;\n        }\n        return time;\n    }, {});\n}\n\nvar data_select = []\nvar data_select1 = []\nvar place_count = []\nfor(var i=0, len=this.data.length-1; i<len; i++){\n  var d = this.data[i]\n  data_select1.push(d.properties.name.toString())}\n  data_select = unique(data_select1)\n  place_count = countTimes(data_select1)\nvar max_count = 0\nfor(i in place_count){\n  var item = place_count[i];\n  if (item>max_count){\n    max_count = item\n  }\n}\n  var height2 = this.height2\n  var width2 = this.width2\n  var svg2 = this.svg2\n  var places_all = self.GLOBAL.place_now\n  svg2.selectAll(\"*\").remove();\n  this.g1_5 = svg2.append(\"g\").attr(\"id\",\"for_interaction_suggestion\"); \n  svg2.append('circle')\n    .attr('r', 5)\n    .attr('cx', width2 / 2)\n    .attr('cy', height2 / 2);\nvar nodes = []\nvar links=[]\n    for(i=0, len=data_select.length;i<len;i++){\n        nodes.push({\"name\":data_select[i]})\n      }\n    for(i=1, len=places_all.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n    var place1 = places_all.features[i].properties.name.toString()\n    var place2 = places_all.features[i+1].properties.name.toString()\n    // if ((place1 in data)&&(place2 in data)){\n    var a = check_in(data_select, place1)\n    var b = check_in(data_select, place2)\n    if((a==\"TRUE\") && (b==\"TRUE\")){\n      var index1 = data_select.findIndex(check_equal1)\n      var index2 = data_select.findIndex(check_equal2)\n      links.push({\"source\": index1, \"target\": index2})\n    }}\nfunction check_in(data, place){\n  for(var i=0, len=places_all.features.length-1; i<len; i++){\n    var d = data[i]\n    if(d== place){\n      return 'TRUE'\n    }}\n  return 'False'\n}\nvar visited = []\n//var select_place_from_force = []\nvar linkElements = svg2.selectAll()\n        .data(links)\n        .enter()\n        .append('line')\n        .attr('stroke', 'black')\n        .attr('stroke-width', '2px');\nself.nodeElements = svg2.selectAll()\n        .data(nodes)\n        .enter()\n        .append('circle')\n        .attr('r', function(node){return 8*(place_count[node.name]+4)/(5+max_count)})\n        .attr('id', function(node){return node.name})\n        .attr('fill', '#6495ED')\n        .on('mouseover',function(){var that = this\n          d3.select(that).attr(\"fill\",'orange')\n          self.GLOBAL.New_time = new Date().getTime()/1000\n          if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n          visited.push(that)\n          self.GLOBAL.Visual_state['Force']['visited'] = visited\n          Bus.$emit(\"change\", self.GLOBAL.Visual_state)\n          self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-force-position',d3.mouse(this),that.id,'\\n'])\n          self.postInteraction({'name':self.GLOBAL.Log_file})\n          self.GLOBAL.Old_time = self.GLOBAL.New_time}\n          Bus.$emit(\"Force_select_data\", that.id)})\n        .on('mouseout', function(){return self.nodeElements.attr('fill', '#6495ED')})\n\n\nvar textElements = svg2.selectAll()\n  .data(nodes)\n  .enter().append('text')\n    .text(node => node.name)\n    .attr('font-size', 13)\n    .attr('dx', 8)\n    .attr('dy', 4)\n\nconst simulation = d3.forceSimulation()\n          .force('link', d3.forceLink().distance(50))\n          .force('charge', d3.forceManyBody(-100))\n          .force('center', d3.forceCenter(width2 / 2, height2 / 2));\nBus.$emit('Brush_update','start')\nsimulation\n    .nodes(nodes)\n    .on('tick', () => {\n  linkElements\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y)\n  self.nodeElements\n    .attr('cx', function(d){return d.x = Math.max(5,Math.min(self.width2-4,d.x))})\n    .attr('cy', function(d){return d.y = Math.max(5,Math.min(self.height2-4,d.y))})\n  textElements\n    .attr('x', node => node.x)\n    .attr('y', node => node.y)\n})\n    .on('end',() => {\n      visited = []\n      var se = []\n      var vertices = []\nfor (i = 0, len = nodes.length; i < len; i++) {\n  var d =nodes[i]\n  se.push({'coordinates':[d.x,d.y],'r':8*(place_count[d.name]+4)/(5+max_count),'name':d.name})\n  vertices.push([d.x,d.y])\n}\nself.vertices = vertices\nBus.$emit('Brush_update','finsih')\nself.GLOBAL.Force_state.push({'Force':se})\nself.GLOBAL.Visual_state['Force']['overall'] = se\nself.GLOBAL.Visual_state['Force']['visit'] = []\nBus.$emit(\"change\", self.GLOBAL.Visual_state)\n    })\n\nsimulation\n    .force('link')\n    .links(links);\n\n\n/*\nconsole.log(nodes[1])\nconsole.log(self.nodeElements)\nvar se = []\nfor (i = 0, len = self.nodeElements._groups.length; i < len; i++) {\n  var d =self.nodeElements._groups[0][i].__data__\n  console.log(i,d,d.x,d.id)\n  se.push({'coordinates':[d.x,d.y],'r':8*(place_count[d.name]+4)/(5+max_count),'name':d.name})\n}\nself.GLOBAL.Visual_state.push({'Force':se})\nconsole.log(self.GLOBAL.Visual_state)\n\nfunction dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n}\n\nfunction dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n}\n*/\nfunction check_equal1(place){return place.toString()==place1}\nfunction check_equal2(place){return place.toString()==place2}\n},\nselect_new_point(){\n  var data = this.Hist_select_data\n  this.nodeElements.attr('fill',function(d){return isSelectedByHist(d,data)\nfunction isSelectedByHist(a,data){\n  for(var i=0,len=data.length;i<len;i++){\n    var place = data[i].properties.name\n      if(a.name==place){\n        return 'orange'}\n    }\n    return \"#6495ED\"\n  }\n\n})\n},\nGet_Predict(predict_all){\n  Bus.$on('Brush_update',(val) => {\n    if(val=='finsih'){\n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    if (predict['type']=='Click'){\n    if(predict['Object_View']=='Force'){\n    var x_position = position['x_position']\n    var y_position = position['y_position']\n    var dist = 0\n    var min_dist = Number.POSITIVE_INFINITY\n    var diss = 0\n    for(i in this.vertices){\n      var d = this.vertices[i]\n      dist = (x_position-d[0])**2+(y_position-d[1])**2\n      if (dist<min_dist){\n        diss = d\n        min_dist = dist\n      }\n    }\n    this.g1_5.append('circle')\n  .attr('cx', diss[0])\n  .attr('cy', diss[1])\n  .attr('r', 10)\n  .attr('fill','red')\n  .attr(\"opacity\",1);}}\n}\n\n    }\n  }),\n  Bus.$on('Force_select_data',() => { \n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    if (predict['type']=='Click'){\n    if(predict['Object_View']=='Force'){\n    var x_position = position['x_position']\n    var y_position = position['y_position']\n    var dist = 0\n    var min_dist = Number.POSITIVE_INFINITY\n    var diss = 0\n    for(i in this.vertices){\n      var d = this.vertices[i]\n      dist = (x_position-d[0])**2+(y_position-d[1])**2\n      if (dist<min_dist){\n        diss = d\n        min_dist = dist\n      }\n    }\n    this.g1_5.append('circle')\n  .attr('cx', diss[0])\n  .attr('cy', diss[1])\n  .attr('r', 10)\n  .attr('fill','red')\n  .attr(\"opacity\",1);}}\n}\n\n  }\n\n  )\n}\n}\n}\n</script>\n\n<style>\n\n.selected{\n  fill: yellow;\n}"],"sourceRoot":"src/components"}]}