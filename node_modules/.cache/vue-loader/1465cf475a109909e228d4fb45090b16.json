{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Force.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Force.vue","mtime":1617180576411},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Force.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA","file":"Force.vue","sourceRoot":"src/components","sourcesContent":["/* eslint-disable */s\n<template>\n  <div id=\"force\">\n    <p>\n      <h4>  Places connection</h4>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\n//import * as topojson from \"topojson\"\nimport Bus from '../assets/bus.js';\n\nexport default {\n  name: \"App\",\n  data(){\n    return{\n      data:undefined,\n      place:[],\n      all_places:{},\n      svg2:undefined,\n      width2 :undefined,\n      height2 : undefined,\n      Hist_select_data:'',\n      nodeElements:undefined,\n      vertices:''\n    }\n  },\n  mounted() {\n    this.handle()\n  },\n  methods: {\n    handle: function () {\n    Bus.$on(\"Start_Place\", () => {\n                this.generateForce()\n              }),  \n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val\n                this.updateForce()\n              }),\n    Bus.$on(\"Hist_select_data\", (val) => {\n                this.Hist_select_data = val\n                this.select_new_point()\n              })\n    Bus.$on(\"Get_Predict\",(val) => {this.Get_Predict(val)})\n  },\n    generateForce() {\nvar data_place = []\nvar width2 = 400,\n    height2 = 285;\nthis.width2 = width2\nthis.height2 = height2\nconst svg2 = d3.select(\"#force\").append(\"svg\")\n\n  svg2.attr(\"width\", width2)\n    .attr(\"height\", height2);\n\n// center marker\nsvg2.append('circle')\n    .attr('r', 3)\n    .attr('cx', width2 / 2)\n    .attr('cy', height2 / 2);\nthis.svg2 = svg2\nlet self = this\n/*\nd3.json(\"sushi_map.json\", function(error, point) {\n  const places_all = topojson.feature(point, point.objects.places)\n*/\nvar places_all = self.GLOBAL.place_now\nvar nodes = []\nvar links=[]\n    for(var i=0, len=data_place.length;i<len;i++){\n        nodes.push({\"name\":data_place[i]})\n      }\n    for(i=1, len=places_all.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n    var place1 = places_all.features[i].properties.name.toString()\n    var place2 = places_all.features[i+1].properties.name.toString()\n    // if ((place1 in data)&&(place2 in data)){\n    var a = check_in(data_place, place1)\n    var b = check_in(data_place, place2)\n    if((a==\"TRUE\") && (b==\"TRUE\")){\n      var index1 = data_place.findIndex(check_equal1)\n      var index2 = data_place.findIndex(check_equal2)\n      links.push({\"source\": index1, \"target\": index2})\n    }\n}\nfunction check_equal1(place){return place.toString()==place1}\nfunction check_equal2(place){return place.toString()==place2}\nfunction check_in(data, place){\n  for(var i=0, len=places_all.features.length-1; i<len; i++){\n    var d = data[i]\n    if(d== place){\n      return 'TRUE'\n    }}\n  return 'False'\n}\nvar linkElements = svg2.selectAll()\n        .data(links)\n        .enter()\n        .append('line')\n        .attr('stroke', 'black')\n        .attr('stroke-width', '2px');\nself.nodeElements = svg2.selectAll()\n        .data(nodes)\n        .enter()\n        .append('circle')\n        .attr('r', 5)\n        .attr('fill', 'red')\n\nvar textElements = svg2.selectAll()\n  .data(nodes)\n  .enter().append('text')\n    .text(node => node.name)\n    .attr('font-size', 15)\n    .attr('dx', 15)\n    .attr('dy', 4)\nconst simulation = d3.forceSimulation()\n          .force('link', d3.forceLink().distance(80))\n          .force('charge', d3.forceManyBody())\n          .force('center', d3.forceCenter(width2 / 2, height2 / 2));\n\nsimulation\n    .nodes(nodes)\n    .on('tick', () => {\n  linkElements\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y)\n  self.nodeElements\n    .attr('cx', node => node.x)\n    .attr('cy', node => node.y)\n  textElements\n    .attr('x', node => node.x)\n    .attr('y', node => node.y)\n})\n\nsimulation\n    .force('link')\n    .links(links);\n/*\nfunction dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n}\n\nfunction dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n}\n*/\n},\nupdateForce(){\n\n  let self = this\nfunction unique(arr) {\n    return arr.filter(function(item, index, arr) {\n      // 取出元素, 该元素在数组中第一次出现的索引 === 当前索引值\n      return arr.indexOf(item, 0) === index;\n    });\n}\nfunction countTimes(data) {\n    return data.reduce(function(time, name) {\n        if (name in time) {\n            time[name]++;\n        } else {\n            time[name] = 1;\n        }\n        return time;\n    }, {});\n}\n\nvar data_select = []\nvar data_select1 = []\nvar place_count = []\nfor(var i=0, len=this.data.length-1; i<len; i++){\n  var d = this.data[i]\n  data_select1.push(d.properties.name.toString())}\n  data_select = unique(data_select1)\n  place_count = countTimes(data_select1)\nvar max_count = 0\nfor(i in place_count){\n  var item = place_count[i];\n  if (item>max_count){\n    max_count = item\n  }\n}\n  var height2 = this.height2\n  var width2 = this.width2\n  var svg2 = this.svg2\n  var places_all = self.GLOBAL.place_now\n  svg2.selectAll(\"*\").remove();\n  this.g1_5 = svg2.append(\"g\").attr(\"id\",\"for_interaction_suggestion\"); \n  svg2.append('circle')\n    .attr('r', 5)\n    .attr('cx', width2 / 2)\n    .attr('cy', height2 / 2);\nvar nodes = []\nvar links=[]\n    for(i=0, len=data_select.length;i<len;i++){\n        nodes.push({\"name\":data_select[i]})\n      }\n    for(i=1, len=places_all.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n    var place1 = places_all.features[i].properties.name.toString()\n    var place2 = places_all.features[i+1].properties.name.toString()\n    // if ((place1 in data)&&(place2 in data)){\n    var a = check_in(data_select, place1)\n    var b = check_in(data_select, place2)\n    if((a==\"TRUE\") && (b==\"TRUE\")){\n      var index1 = data_select.findIndex(check_equal1)\n      var index2 = data_select.findIndex(check_equal2)\n      links.push({\"source\": index1, \"target\": index2})\n    }}\nfunction check_in(data, place){\n  for(var i=0, len=places_all.features.length-1; i<len; i++){\n    var d = data[i]\n    if(d== place){\n      return 'TRUE'\n    }}\n  return 'False'\n}\nvar visited = []\n//var select_place_from_force = []\nvar linkElements = svg2.selectAll()\n        .data(links)\n        .enter()\n        .append('line')\n        .attr('stroke', 'black')\n        .attr('stroke-width', '2px');\nself.nodeElements = svg2.selectAll()\n        .data(nodes)\n        .enter()\n        .append('circle')\n        .attr('r', function(node){return 8*(place_count[node.name]+4)/(5+max_count)})\n        .attr('id', function(node){return node.name})\n        .attr('fill', '#6495ED')\n        .on('mouseover',function(){var that = this\n          d3.select(that).attr(\"fill\",'orange')\n          self.GLOBAL.New_time = new Date().getTime()/1000\n          if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n          visited.push(that)\n          self.GLOBAL.Visual_state['Force']['visited'] = visited\n          Bus.$emit(\"change\", self.GLOBAL.Visual_state)\n          self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-force-position',d3.mouse(this),that.id,'\\n'])\n          self.postInteraction({'name':self.GLOBAL.Log_file})\n          self.GLOBAL.Old_time = self.GLOBAL.New_time}\n          Bus.$emit(\"Force_select_data\", that.id)})\n        .on('mouseout', function(){return self.nodeElements.attr('fill', '#6495ED')})\n\n\nvar textElements = svg2.selectAll()\n  .data(nodes)\n  .enter().append('text')\n    .text(node => node.name)\n    .attr('font-size', 13)\n    .attr('dx', 8)\n    .attr('dy', 4)\n\nconst simulation = d3.forceSimulation()\n          .force('link', d3.forceLink().distance(50))\n          .force('charge', d3.forceManyBody(-100))\n          .force('center', d3.forceCenter(width2 / 2, height2 / 2));\nBus.$emit('Brush_update','start')\nsimulation\n    .nodes(nodes)\n    .on('tick', () => {\n  linkElements\n        .attr('x1', d => d.source.x)\n        .attr('y1', d => d.source.y)\n        .attr('x2', d => d.target.x)\n        .attr('y2', d => d.target.y)\n  self.nodeElements\n    .attr('cx', function(d){return d.x = Math.max(5,Math.min(self.width2-4,d.x))})\n    .attr('cy', function(d){return d.y = Math.max(5,Math.min(self.height2-4,d.y))})\n  textElements\n    .attr('x', node => node.x)\n    .attr('y', node => node.y)\n})\n    .on('end',() => {\n      visited = []\n      var se = []\n      var vertices = []\nfor (i = 0, len = nodes.length; i < len; i++) {\n  var d =nodes[i]\n  se.push({'coordinates':[d.x,d.y],'r':8*(place_count[d.name]+4)/(5+max_count),'name':d.name})\n  vertices.push([d.x,d.y])\n}\nself.vertices = vertices\nBus.$emit('Brush_update','finsih')\nself.GLOBAL.Force_state.push({'Force':se})\nself.GLOBAL.Visual_state['Force']['overall'] = se\nself.GLOBAL.Visual_state['Force']['visit'] = []\nBus.$emit(\"change\", self.GLOBAL.Visual_state)\n    })\n\nsimulation\n    .force('link')\n    .links(links);\n\n\n/*\nconsole.log(nodes[1])\nconsole.log(self.nodeElements)\nvar se = []\nfor (i = 0, len = self.nodeElements._groups.length; i < len; i++) {\n  var d =self.nodeElements._groups[0][i].__data__\n  console.log(i,d,d.x,d.id)\n  se.push({'coordinates':[d.x,d.y],'r':8*(place_count[d.name]+4)/(5+max_count),'name':d.name})\n}\nself.GLOBAL.Visual_state.push({'Force':se})\nconsole.log(self.GLOBAL.Visual_state)\n\nfunction dragstarted(d) {\n    if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n    d.fx = d.x;\n    d.fy = d.y;\n}\n\nfunction dragged(d) {\n    d.fx = d3.event.x;\n    d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n    if (!d3.event.active) simulation.alphaTarget(0);\n    d.fx = null;\n    d.fy = null;\n}\n*/\nfunction check_equal1(place){return place.toString()==place1}\nfunction check_equal2(place){return place.toString()==place2}\n},\nselect_new_point(){\n  var data = this.Hist_select_data\n  this.nodeElements.attr('fill',function(d){return isSelectedByHist(d,data)\nfunction isSelectedByHist(a,data){\n  for(var i=0,len=data.length;i<len;i++){\n    var place = data[i].properties.name\n      if(a.name==place){\n        return 'orange'}\n    }\n    return \"#6495ED\"\n  }\n\n})\n},\nGet_Predict(predict_all){\n  Bus.$on('Brush_update',(val) => {\n    if(val=='finsih'){\n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    if (predict['type']=='Click'){\n    if(predict['Object_View']=='Force'){\n    var x_position = position['x_position']\n    var y_position = position['y_position']\n    var dist = 0\n    var min_dist = Number.POSITIVE_INFINITY\n    var diss = 0\n    for(i in this.vertices){\n      var d = this.vertices[i]\n      dist = (x_position-d[0])**2+(y_position-d[1])**2\n      if (dist<min_dist){\n        diss = d\n        min_dist = dist\n      }\n    }\n    this.g1_5.append('circle')\n  .attr('cx', diss[0])\n  .attr('cy', diss[1])\n  .attr('r', 10)\n  .attr('fill','red')\n  .attr(\"opacity\",1);}}\n}\n\n    }\n  }),\n  Bus.$on('Force_select_data',() => { \n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    if (predict['type']=='Click'){\n    if(predict['Object_View']=='Force'){\n    var x_position = position['x_position']\n    var y_position = position['y_position']\n    var dist = 0\n    var min_dist = Number.POSITIVE_INFINITY\n    var diss = 0\n    for(i in this.vertices){\n      var d = this.vertices[i]\n      dist = (x_position-d[0])**2+(y_position-d[1])**2\n      if (dist<min_dist){\n        diss = d\n        min_dist = dist\n      }\n    }\n    this.g1_5.append('circle')\n  .attr('cx', diss[0])\n  .attr('cy', diss[1])\n  .attr('r', 10)\n  .attr('fill','red')\n  .attr(\"opacity\",1);}}\n}\n\n  }\n\n  )\n}\n}\n}\n</script>\n\n<style>\n\n.selected{\n  fill: yellow;\n}"]}]}