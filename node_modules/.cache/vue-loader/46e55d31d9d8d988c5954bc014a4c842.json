{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Map.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Map.vue","mtime":1617179384171},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnNlbGVjdGVkX2ZpcnN0IHsKICBzdHJva2U6IGJsYWNrOwogIHN0cm9rZS13aWR0aDogMXB4Owp9Ci5zZWxlY3RlZF9zZWNvbmQgewogIG9wYWNpdHk6IDE7CiAgc3Ryb2tlOiBibGFjazsKICBzdHJva2Utd2lkdGg6IDNweDsKICBmaWxsOiBvcmFuZ2U7CiAgcjo2cHg7Cn0KLnN1YnVuaXQuU0NUIHsgZmlsbDogI2RkYzsgfQouc3VidW5pdC5XTFMgeyBmaWxsOiAjY2RkOyB9Ci5zdWJ1bml0Lk5JUiB7IGZpbGw6ICNjZGM7IH0KLnN1YnVuaXQuRU5HIHsgZmlsbDogI2RjZDsgfQoKLnN1YnVuaXQuSVJMLAouc3VidW5pdC1sYWJlbC5JUkwgewogIGRpc3BsYXk6IG5vbmU7Cn0KCi5zdWJ1bml0LWJvdW5kYXJ5IHsKICBmaWxsOiBub25lOwogIHN0cm9rZTogIzc3NzsKICBzdHJva2UtZGFzaGFycmF5OiAyLDI7CiAgc3Ryb2tlLWxpbmVqb2luOiByb3VuZDsKfQoKLnN1YnVuaXQtYm91bmRhcnkuSVJMIHsKICBzdHJva2U6ICNhYWE7Cn0KCi5zdWJ1bml0LWxhYmVsIHsKICBmaWxsOiAjNzc3OwogIGZpbGwtb3BhY2l0eTogLjU7CiAgZm9udC1zaXplOiAyMHB4OwogIGZvbnQtd2VpZ2h0OiAzMDA7CiAgdGV4dC1hbmNob3I6IG1pZGRsZTsKfQoucGxhY2UtcG9pbnQKLnBsYWNlCi5wbGFjZS1sYWJlbCB7CiAgZmlsbDogIzQ0NDsKfQoKdGV4dCB7CiAgZm9udC1mYW1pbHk6ICJIZWx2ZXRpY2EgTmV1ZSIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgZm9udC1zaXplOiAxMHB4OwogIHBvaW50ZXItZXZlbnRzOiBub25lOwp9CiNsYWJlbCB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIGxlZnQ6IDEwcHg7CiAgZm9udC13ZWlnaHQ6IDEwMDsKICBmb250LWZhbWlseTogIlByb3hpbWEgTm92YSIsICJNb250c2VycmF0Iiwgc2Fucy1zZXJpZjsKfQoKLmhvdmVyIHsKICAgIGZpbGw6IHllbGxvdzsgICAKfQouZGVzcGxlZ2FibGUgewogICAgICAgIGxlZnQ6IDEwcHg7CiAgICAgICAgdG9wOiA1cHg7CiAgICB9Ci8qCiNzbGlkZXJDb250YWluZXIgewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgdG9wOiA2MDBweDsKICAgIGxlZnQ6MTBweDsKfQojaGlzdHBsb3R7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB0b3A6IDYwMHB4OwogICAgbGVmdDoxMHB4Owp9CiNtYXAgewogICAgdG9wOiAyMDAwcHg7CiAgICBsZWZ0OjEwMDBweDsKfQoqLwo="},{"version":3,"sources":["Map.vue"],"names":[],"mappingsywBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components","sourcesContent":["/* eslint-disable */\n<template>\n  <div>\n    <div style = \"width:380px;height:44px;float:left\">\n      <h4>Footprint</h4>\n    </div>\n    <div id = 'pos'  style = \"width:120px;height:24px;float:left\">\n      <p>  </p>\n\n    </div>\n  <div id=\"map\">\n  </div>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\"\nimport * as d3Chromatic from 'd3-scale-chromatic';\n//import Vue from 'vue';\nimport Bus from '../assets/bus.js';\n//import * as d3Voronoi from 'd3-voronoi'\n//var msgCenter = new Vue()\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      place_color:'',\n      select_data:'',\n      Hist_select_data:'',\n      Force_select_data:'',\n      myCircle:'',\n      myLink:'',\n      svg:'',\n      hover_period:'',\n      g4:'',\n      g3:'', \n      g2:'',\n      zoom_value:[],\n      g1_5:'',\n      vertices:'',\n      group1:'',\n      g1:'',\n      projection:'',\n      path:'',\n      dropdownButton:'',\n      subunits:'',\n      places:''\n    };\n  },\n  //created() {\n    // 在需要的传递数据的时候调用sendData方法，这里模拟调用\n    //this.sendData();\n    \n  //},\n  mounted() {\n    this.getMap();\n    this.handle()\n    //this.sendData();\n  },\n  methods: {\n    handle: function () {\n    Bus.$on(\"subunits\",()=>{this.generateArc()})\n    Bus.$on(\"New_Poet\", (val) => {\n      this.update(val)}),  \n    Bus.$on(\"hover_period\", (val) => {\n      this.hover_period=val;\n      this.show_period()}),\n    Bus.$emit(\"Map_age\", this.select_value),\n    Bus.$on(\"Hist_select_data\", (val) => {\n      this.Hist_select_data=val;\n      this.select_new_point()}),\n    Bus.$on(\"change\", () => {\n      var time = new Date().getTime()/1000\n\n      this.GLOBAL.Visual_state['timestamp'] = time\n      var save = JSON.stringify(this.GLOBAL.Visual_state)\n\n      this.GLOBAL.Visual_state_All.push([time,save])\n      this.postVisual({'name':this.GLOBAL.Visual_state})}),  \n    Bus.$on(\"Force_select_data\", (val) => {\n      this.Force_select_data=val;\n      this.select_new_point_Force()})\n    Bus.$on(\"Get_Predict\",(val) => {this.Get_Predict(val)})},\n    getMap(){\n      let self = this\n        d3.json(\"sushi_map.json\", function(error, point) {\n        self.subunits = topojson.feature(point, point.objects.china)\n        Bus.$emit(\"subunits\",self.subunits)\n})\n    },\n    generateArc() {\n      const width = 500;\n      const height = 640;\n\n      const projection = d3.geoAlbers()\n          .center([2, 29.6])\n          .rotate([-110, 0])\n          .parallels([20, 60])\n          .translate([width / 2, height / 2])\n          .scale(1600)\n      this.projection = projection\n\n      const path = d3.geoPath()\n          .projection(projection)\n          .pointRadius(2);\n      this.path = path\n      var dropdownButton = d3.select(\"#pos\")\n      .append('select').attr(\"x\",\"100px\")\n      \n      const svg = d3\n        .select(\"#map\")\n        .append(\"svg\")\n        .attr(\"width\", width)\n        .attr(\"height\", height);\n      let self = this\n      d3.csv(\"place_senti2.csv\",function(data_all){\n        var data = {'Su Shi':[],'Huang Tingjian':[],'Ouyang Xiu':[],'Xin Qiji':[]}\n        for(var i in data_all){\n          if(data_all[i]['author']=='Su Shi'){\n            data['Su Shi'].push(data_all[i])\n          }\n          else if(data_all[i]['author']=='Huang Tingjian'){\n            data['Huang Tingjian'].push(data_all[i])\n          }\n          else if(data_all[i]['author']=='Ouyang Xiu'){\n            data['Ouyang Xiu'].push(data_all[i])\n          }\n          else if(data_all[i]['author']=='Xin Qiji'){\n            data['Xin Qiji'].push(data_all[i])\n          }          \n        }\n        self.place_color = data\n        self.place_color_select = data['Su Shi']\n      })\n      d3.json(\"map.json\", function(error, point) {\n      var subunits = self.subunits\n      var places_all = topojson.feature(point, point.objects.places)\n      var places1 = []\n      for(i in places_all['features']){\n        if(places_all['features'][i].properties.author=='Su Shi'){\n          places1.push(places_all['features'][i])\n        }\n      }\n      var places = {type: \"FeatureCollection\",features:places1}\n      self.places = places\n      self.GLOBAL.place_now = places\n      Bus.$emit('Start_Place', places)\n  var myColor = d3.scaleSequential()\n    .domain([0.83,0.42])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color_select[i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n  var zoom = d3.zoom()\n      .scaleExtent([0.5,3])//用于设置最小和最大的缩放比例\n      .on(\"zoom\",zoomed) \n/*\nself.GLOBAL.New_time = new Date().getTime()/1000\nself.GLOBAL.Old_time = self.GLOBAL.New_time\nself.GLOBAL.Log_file.push(['Start_timestamp',self.GLOBAL.New_time,'\\n'])\nself.postInteraction({'name':self.GLOBAL.Log_file})*/\n//编写 平移函数\n/*\nfunction reset() {\n    \n      svg.transition().duration(750).call( //duration过渡时间\n        zoom.transform,\n        d3.zoomIdentity, //控制缩放中心的为鼠标当前位置\n        d3.zoomTransform(svg.node()).invert([width / 2, height / 2]) //弹性动画的圆心位置\n      );\n}*/\n// 缩放函数\n\nfunction zoomed() {\n    const transform = d3.event.transform; //识别鼠标事件\n    self.GLOBAL.New_time = new Date().getTime()/1000\n      self.zoom_value.push(['timestamp',new Date().getTime()/1000,'Zoom-Map-Value',transform,'\\n'])\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    \n    group1.attr(\"transform\", transform); //将缩放结果传给g\n    var k = Math.sqrt(100 / projection.scale()); //修改地图尺寸\n    group1.attr(\"stroke-width\", 1 / k); //修改对应的属性\n    return transform\n}\n    var group1 = svg.append(\"g\").attr(\"id\",\"group\").datum({\n    x: 0,\n    y: 0\n  })//.on(\"click\", reset);  //定义点击事件\n      var g1 = group1.append(\"g\").attr(\"id\",\"for_path\"); \n      //var g0 = group.append(\"g\").attr(\"id\",\"for_vo\"); //新增组，用于存储不同对象\n      var g1_5 = group1.append(\"g\").attr(\"id\",\"for_interaction_suggestion\"); //\n      self.g1_5 = g1_5\n      var g3 = group1.append(\"g\").attr(\"id\",\"for_line\").attr(\"pointer-events\",\"none\");\n      var g2 = group1.append(\"g\").attr(\"id\",\"for_circle\");\nself.g2 = g2\nself.g3 = g3\n// \n\n\ng1.selectAll(\".subunit\")\n      .data(subunits.features)\n    .enter().append(\"path\")\n      .attr(\"class\", function(d) { return \"subunit \" + d.id; })\n      .attr(\"d\", path)\n      .attr('stroke','#222')\n      .attr('stroke-width','1px')\n      .attr('fill',function(d){var p = d.properties.name\n        if((p=='山西省')|(p=='陕西省')|(p=='河南省')|(p=='河北省')|(p=='北京市')|\n          (p=='天津市')|(p=='河南省')|(p=='山东省')|(p=='江苏省')|(p=='浙江省')|\n          (p=='上海市')|(p=='湖南省')|(p=='湖北省')|(p=='江西省')|(p=='重庆市')|\n          (p=='四川省')|(p=='广西壮族自治区')|(p=='海南省')|(p=='广东省')|(p=='贵州省')|\n          (p=='福建省')|(p=='安徽省')){return '#ccc'}\n        else{return '#fff'}})\n\nvar link1s = [\n  {type: \"LineString\", age:0,coordinates: [[0,0],[0,0]]}\n]\n    for(var i=0, len=places.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n        link1s.push({\n            type: \"LineString\",\n            age : places.features[i].properties.age,\n            coordinates: [\n                [ places.features[i].geometry.coordinates[0], places.features[i].geometry.coordinates[1]],\n                [ places.features[i+1].geometry.coordinates[0], places.features[i+1].geometry.coordinates[1]]]\n        });\n    }\n    g3.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 8 8')\n        .attr('refX', 5)\n        .attr('markerWidth', 2.5)//箭头参数适当按需调整\n        .attr('markerHeight', 2.5)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')//绘制箭头形状\n        .attr('fill', '#483D8B');\n  // 加label\n\n  self.myLink = g3.selectAll(\"myPath\")\n\n      .data(link1s)\n      .enter()\n      .append(\"path\")\n        .attr(\"d\", function(d){ return path(d)})\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#483D80\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\",0.4)\n        .attr(\"marker-end\", \"url(#end-arrow)\")\n      g3.append(\"path\")\n        .attr(\"d\", d3.symbol().type(d3.symbolStar).size(200))\n        .attr(\"fill\",'red')\n        .attr(\"transform\",\"translate(297,166)\")\n  self.myCircle = g2.selectAll(\".place-point\")\n      .data(places.features)\n    .enter()\n    .append(\"circle\")\n      .attr(\"class\", \"place-point\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .attr(\"x\", function(d) { return d.geometry.coordinates[0] > -1 ? 6 : -6; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"r\", 4.8)//function(d) { return d.properties.age/10; })\n      .attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n\n\n  self.svg = svg\n  var se = []\n  var vertices = []\nfor (i = 0, len = places.features.length; i < len; i++) {\n  var d = places.features[i]\n  se.push({'coordinates':projection(d.geometry.coordinates),'color':choose_color(d)})\n  vertices.push(projection(d.geometry.coordinates))\n}\nself.vertices = vertices\nself.GLOBAL.Visual_state['Map']['overall'] = se\n\nvar allGroup = ['none',\"select area\", \"zoom\", \"show point info\"]\ndropdownButton.on(\"change\", dropchange)\n\n// add the options to the button\ndropdownButton // Add a button\n  .selectAll('myOptions') // Next 4 lines add 6 options = 6 colors\n  .data(allGroup)\n  .enter()\n  .append('option')\n  .text(function (d) { return d; }) // text showed in the menu\n  .attr(\"value\", function (d) { return d; }) \nself.dropdownButton = dropdownButton\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"100\")\n    .style(\"visibility\", \"hidden\")\nvar g4 = group1.append(\"g\").attr(\"id\",\"for_brush\"); //\n\nself.g4 = g4\nfunction dropchange(){\n  var newCereal = d3.select(this).property('value')\n  if (newCereal=='zoom'){\n    self.zoom_value = []\n    svg.call(zoom)\n     g4.style(\"display\",\"none\")\nself.svg.on(\"click\", function(){self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})})\n  self.myCircle.on(\"mouseover\", function(){return null})\n    .on(\"mousemove\", function(){return null})\n    .on(\"mouseout\", function(){return null})\n    d3.select(\"#map\")\n    .on('mouseover', function(){return null})\n  }\n  else if (newCereal=='select area'){\n    svg.on('.zoom', null)\n\n    g4.style(\"display\",\"block\")\n  g4\n    .call( d3.brush()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on(\"end\", updata_chart)\n    )    \n  }\n  else if ((newCereal=='show point info'))\n    {svg.on('.zoom', null)\n  self.myCircle//.attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n      .attr('r',4.8)\n      .attr('stroke',null)\n\n      g4.style(\"display\",\"none\")\n    /*\n    self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    */\n\n      self.myCircle.on(\"click\", function(d){d3.select(this).attr(\"fill\",\"#BC8F8F\")\n      self.GLOBAL.New_time = new Date().getTime()/1000\n      if ((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n      self.GLOBAL.Visual_state['Map']['visit'].push(d),\n      Bus.$emit(\"change\", self.GLOBAL.Visual_state),\n      d3.select(\"#map\")\n  .on('click', function(){self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-map-position',d3.mouse(this),d.properties.name,'\\n']),self.postInteraction({'name':self.GLOBAL.Log_file}), self.GLOBAL.Old_time = self.GLOBAL.New_time})\n\n  }\n  return tooltip.style(\"visibility\", \"visible\").style(\"top\",(d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\").text(d.properties.name+','+d.properties.age+'岁')\n})\n    .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\"),d3.select(this).transition().duration(500).attr(\"fill\", function(d){return choose_color(d)});})\n    }\n}\n\n  function updata_chart(){\n    self.myCircle.attr(\"opacity\",0.7)\n    self.myLink.style(\"opacity\",0.4)\n    var select_data = update_data()\n  Bus.$emit(\"Map_select_data\", select_data)\n  }\n\n  function update_data() {\n    var select_data = []\n    var extent = d3.event.selection\n    self.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n    self.myCircle.classed(\"selected_first\", function(d){ return isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]) }) \n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'Brush-Map-Position',extent[0],extent[1],'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    //console.log('r',self.GLOBAL.Get_message)\n    for(i=0, len=self.places.features.length-1; i<len; i++){\n      var d = self.places.features[i]\n      if(isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]))\n        {//a = a+parseInt(d.properties.age)}\n        select_data.push(d)}\n      }\n      return select_data\n      }\n\nfunction isBrushed(brush_coords, cx, cy) {\n       var x0 = brush_coords[0][0],\n           x1 = brush_coords[1][0],\n           y0 = brush_coords[0][1],\n           y1 = brush_coords[1][1];\n      return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;    // This return TRUE or FALSE depending on if the points is in the selected area\n  }\n\n  }})},\nupdate(author){\nthis.g1_5.selectAll(\"*\").remove()\nthis.g2.selectAll(\"*\").remove()\nthis.g3.selectAll(\"*\").remove()\nthis.place_color_select = this.place_color[author]\n      //const width = 500;\n      //const height = 640;\nvar svg = this.svg\nvar projection = this.projection \nvar path = this.path\n//var dropdownButton = this. dropdownButton\nlet self = this\n      d3.json(\"map.json\", function(error, point) {\n      var places_all = topojson.feature(point, point.objects.places)\n\n      var places1 = []\n      for(i in places_all['features']){\n        if(places_all['features'][i].properties.author==author){\n          places1.push(places_all['features'][i])\n        }\n      }\n      var places = {type: \"FeatureCollection\",features:places1}\n      self.places = places\n      self.GLOBAL.place_now = places\n      \n  var myColor = d3.scaleSequential()\n    .domain([0.83,0.42])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color[author][i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n      var g3 = self.g3\n      var g2 = self.g2\n\n// \nvar link1s = [\n  {type: \"LineString\", age:0,coordinates: [[0,0],[0,0]]}\n]\n    for(var i=0, len=places.features.length-1; i<len; i++){\n    // (note: loop until length - 1 since we're getting the next\n    //  item with i+1)\n        link1s.push({\n            type: \"LineString\",\n            age : places.features[i].properties.age,\n            coordinates: [\n                [ places.features[i].geometry.coordinates[0], places.features[i].geometry.coordinates[1]],\n                [ places.features[i+1].geometry.coordinates[0], places.features[i+1].geometry.coordinates[1]]]\n        });\n    }\n    g3.append('svg:defs').append('svg:marker')\n        .attr('id', 'end-arrow')\n        .attr('viewBox', '0 -5 8 8')\n        .attr('refX', 5)\n        .attr('markerWidth', 2.5)//箭头参数适当按需调整\n        .attr('markerHeight', 2.5)\n        .attr('orient', 'auto')\n        .append('svg:path')\n        .attr('d', 'M0,-5L10,0L0,5')//绘制箭头形状\n        .attr('fill', '#483D8B');\n  // 加label\n\n  self.myLink = g3.selectAll(\"myPath\")\n      .data(link1s)\n      .enter()\n      .append(\"path\")\n        .attr(\"d\", function(d){ return path(d)})\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#483D80\")\n        .style(\"stroke-width\", 2)\n        .style(\"opacity\",0.4)\n        .attr(\"marker-end\", \"url(#end-arrow)\")\n      g3.append(\"path\")\n        .attr(\"d\", d3.symbol().type(d3.symbolStar).size(200))\n        .attr(\"fill\",'red')\n        .attr(\"transform\",\"translate(297,166)\")\n  self.myCircle = g2.selectAll(\".place-point\")\n      .data(places.features)\n    .enter()\n    .append(\"circle\")\n      .attr(\"class\", \"place-point\")\n      .attr(\"transform\", function(d) { return \"translate(\" + projection(d.geometry.coordinates) + \")\"; })\n      .attr(\"x\", function(d) { return d.geometry.coordinates[0] > -1 ? 6 : -6; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"r\", 4.8)//function(d) { return d.properties.age/10; })\n      .attr(\"fill\", function(d){return choose_color(d)})\n      .attr(\"opacity\",0.7)\n\n\n  self.svg = svg\n  var se = []\n  var vertices = []\nfor (i = 0, len = places.features.length; i < len; i++) {\n  var d = places.features[i]\n  se.push({'coordinates':projection(d.geometry.coordinates),'color':choose_color(d)})\n  vertices.push(projection(d.geometry.coordinates))\n}\nself.vertices = vertices\nself.GLOBAL.Visual_state['Map']['overall'] = se})\n\n/*\nvar allGroup = ['none',\"select area\", \"zoom\", \"show point info\"]\ndropdownButton.on(\"change\", dropchange)\n\n// add the options to the button\ndropdownButton // Add a button\n  .selectAll('myOptions') // Next 4 lines add 6 options = 6 colors\n  .data(allGroup)\n  .enter()\n  .append('option')\n  .text(function (d) { return d; }) // text showed in the menu\n  .attr(\"value\", function (d) { return d; }) \n\nvar tooltip = d3.select(\"body\")\n    .append(\"div\")\n    .style(\"position\", \"absolute\")\n    .style(\"z-index\", \"100\")\n    .style(\"visibility\", \"hidden\")\nvar g4 = self.g4\nself.g4 = g4\n\nfunction dropchange(){\n  var newCereal = d3.select(this).property('value')\n  if (newCereal=='zoom'){\n    self.zoom_value = []\n    svg.call(zoom)\n     g4.style(\"display\",\"none\")\nself.svg.on(\"click\", function(){self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})})\n  self.myCircle.on(\"mouseover\", function(){return null})\n    .on(\"mousemove\", function(){return null})\n    .on(\"mouseout\", function(){return null})\n    d3.select(\"#map\")\n    .on('mouseover', function(){return null})\n  }\n  else if (newCereal=='select area'){\n    svg.on('.zoom', null)\n    \n\n    g4.style(\"display\",\"block\")\n  g4\n    .call( d3.brush()                 // Add the brush feature using the d3.brush function\n      .extent( [ [0,0], [width,height] ] ) // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n      .on(\"end\", updata_chart)\n    )    \n  }\n  else if ((newCereal=='show point info'))\n    {svg.on('.zoom', null)\n      g4.style(\"display\",\"none\")\n    self.GLOBAL.Log_file.push(self.zoom_value[self.zoom_value.length - 1])\n    console.log(self.zoom_value[self.zoom_value.length - 1])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n\n\n      self.myCircle.on(\"click\", function(d){d3.select(this).attr(\"fill\",\"#BC8F8F\")\n      self.GLOBAL.New_time = new Date().getTime()/1000\n      if ((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n      self.GLOBAL.Visual_state['Map']['visit'].push(d),\n      Bus.$emit(\"change\", self.GLOBAL.Visual_state),\n      d3.select(\"#map\")\n  .on('click', function(){self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'hover-map-position',d3.mouse(this),d.properties.name,'\\n']),self.postInteraction({'name':self.GLOBAL.Log_file}), self.GLOBAL.Old_time = self.GLOBAL.New_time})\n\n  }\n  return tooltip.style(\"visibility\", \"visible\").style(\"top\",(d3.event.pageY-10)+\"px\").style(\"left\",(d3.event.pageX+10)+\"px\").text(d.properties.name+','+d.properties.age+'岁')\n})\n    .on(\"mouseout\", function(){return tooltip.style(\"visibility\", \"hidden\"),d3.select(this).transition().duration(500).attr(\"fill\", function(d){return choose_color(d)});})\n    }\n}\n\n  function updata_chart(){\n    self.myCircle.attr(\"opacity\",0.7)\n    self.myLink.style(\"opacity\",0.4)\n    var select_data = update_data()\n  Bus.$emit(\"Map_select_data\", select_data)\n  }\n\n  function update_data() {\n    var select_data = []\n    var extent = d3.event.selection\n    self.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n    self.myCircle.classed(\"selected_first\", function(d){ return isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]) }) \n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,'Brush-Map-Position',extent[0],extent[1],'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time\n    //console.log('r',self.GLOBAL.Get_message)\n    for(i=0, len=places.features.length-1; i<len; i++){\n      var d = places.features[i]\n      if(isBrushed(extent, projection(d.geometry.coordinates)[0],projection(d.geometry.coordinates)[1]))\n        {//a = a+parseInt(d.properties.age)}\n        select_data.push(d)}\n      }\n      return select_data\n      }\n\nfunction isBrushed(brush_coords, cx, cy) {\n       var x0 = brush_coords[0][0],\n           x1 = brush_coords[1][0],\n           y0 = brush_coords[0][1],\n           y1 = brush_coords[1][1];\n      return x0 <= cx && cx <= x1 && y0 <= cy && cy <= y1;    // This return TRUE or FALSE depending on if the points is in the selected area\n  }\n\n  }})\n*/},\n\nselect_new_point(){\n    var data = this.Hist_select_data\n    this.myCircle.classed(\"selected_second\", function(d){return isSelectedByHist(d,data)})\n    //this.myLink.style(\"stroke\",function(d) {return LinkisSelectedByHist(d)})\n    //this.myLink.style(\"opacity\",function(d) {return LinkisSelectedByHist_O(d)})\n    //this.myLink.style(\"stroke-width\",function(d) {return LinkisSelectedByHist_S(d)})\n    \nfunction isSelectedByHist(a,data){\n  for(var i=0,len=data.length;i<len;i++){\n    var geo = data[i].properties.name\n    var age_select = data[i].properties.age\n    if (a.properties.name==geo){\n      if(a.properties.age==age_select){\n        return (1==1)\n      }}}\n  return (1==0)}\n},\nselect_new_point_Force(){\n  var data = this.Force_select_data\n  this.myCircle.classed(\"selected_second\", function(d){return d.properties.name==data})\n},\nshow_period(){\n  this.g4.style(\"display\",\"none\")\n  let self = this\n  var myColor = d3.scaleSequential()\n    .domain([0.83,0.42])\n    .interpolator(d3Chromatic.interpolatePiYG);\n  function choose_color(place){\n    var name = place.properties.name\n    var res = \"rgb(100,149,237)\"\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color_select[i]\n      if(name == sli['place']){\n        res = myColor(sli['senti'])\n      }\n    }\n    return res\n  }\n\n  function choose_id(place){\n    var name = place.properties.name\n    var res = 5\n    for (var i = 0;i<self.place_color_select.length; i++) {\n      var sli = self.place_color_select[i]\n      if(name == sli['place']){\n        var senti = sli['senti']\n        if(senti<0.502){\n          res = 0\n        }\n        else if ((senti>0.502)&(senti<0.584)){res = 1}\n        else if ((senti>0.584)&(senti<0.666)){res = 2}\n        else if ((senti>0.666)&(senti<0.748)){res = 3}\n        else if ((senti>0.748)){res = 4}\n      }\n    }\n    return res\n  }\n  this.myCircle.attr(\"fill\", function(d){return choose_color(d)})\n  this.myCircle.attr(\"opacity\",function(d){\n    var id = choose_id(d)\n    if(self.hover_period==6){\n       return 0.7\n    }\n    if(id==self.hover_period){\n      return 1\n    }\n    else{return 0}\n  })\n  this.myLink.style(\"opacity\",function(){\n    if(self.hover_period==6){ return 0.4}\n    else{return 0}\n  })},\nGet_Predict(predict_all){\n  console.log('Map_Get_Predict')\n  this.g1_5.selectAll(\"*\").remove()\n  for(var i in predict_all){\n    var predict = predict_all[i]\n    var position = predict['Behavior']\n    console.log('position',position)\n  if (predict['type']=='Brush'){\n    var x_1 = Math.min(Math.max(0,position['x_position1']),500)\n    var y_1 = Math.min(Math.max(0,position['y_position1']),650)\n    var x_2 = Math.min(Math.max(x_1+20,position['x_position2']),500)\n    var y_2 = Math.min(Math.max(y_1+20,position['y_position2']),650)\n\n    this.g1_5.append('rect')\n  .attr('x', x_1)\n  .attr('y', y_1)\n  .attr('width', x_2-x_1)\n  .attr('height', y_2-y_1)\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"1px\")\n  .attr(\"opacity\",0.5)\n  .attr('fill', '#69a3b2');\n\n      this.g1_5.append('text')\n  .attr('x', x_1)\n  .attr('y', y_1)\n  .text('Brush')\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"1px\")\n  .style(\"font-size\",\"14px\");\n  }\n  \n  if (predict['type']=='Zoom'){\n    var scale = position['scale']\n    var delta_x = position['delta_x']\n    var delta_y = position['delta_y']\n    var width_rec = 500/scale\n    var height_rec = 640/scale\n    var x1 = Math.max(0,-delta_x)\n    var y1 = Math.max(0,-delta_y)\n        this.g1_5.append('rect')\n  .attr('x', x1)\n  .attr('y', y1)\n  .attr('width', width_rec)\n  .attr('height', height_rec)\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"1px\")\n  .attr(\"opacity\",0.1)\n  .attr('fill', '#69a3b2');\n\n      this.g1_5.append('text')\n  .attr('x', x1)\n  .attr('y', y1)\n  .text('Zoom')\n  .attr('stroke', 'black')\n  .attr('stroke-width',\"2px\")\n  .style(\"font-size\",\"14px\");\n  }\n  \n  if (predict['type']=='Click'){\n    if(predict['Object_View']=='Map'){\n    var x_position = position['x_position']\n    var y_position = position['y_position']\n    var dist = 0\n    var min_dist = Number.POSITIVE_INFINITY\n    var diss = 0\n    for(i in this.vertices){\n      var d = this.vertices[i]\n      dist = (x_position-d[0])**2+(y_position-d[1])**2\n      if (dist<min_dist){\n        diss = d\n        min_dist = dist\n      }\n    }\n    this.g1_5.append('circle')\n  .attr('cx', diss[0])\n  .attr('cy', diss[1])\n  .attr('r', 7)\n  .attr('stroke', 'black')\n  .attr(\"stroke-width\",'4px')\n  .attr(\"opacity\",1)\n  .attr('fill', '#69a3b2');}}\n  }\n\n\n}\n\n}}\n</script>\n<style>\n\n.selected_first {\n  stroke: black;\n  stroke-width: 1px;\n}\n.selected_second {\n  opacity: 1;\n  stroke: black;\n  stroke-width: 3px;\n  fill: orange;\n  r:6px;\n}\n.subunit.SCT { fill: #ddc; }\n.subunit.WLS { fill: #cdd; }\n.subunit.NIR { fill: #cdc; }\n.subunit.ENG { fill: #dcd; }\n\n.subunit.IRL,\n.subunit-label.IRL {\n  display: none;\n}\n\n.subunit-boundary {\n  fill: none;\n  stroke: #777;\n  stroke-dasharray: 2,2;\n  stroke-linejoin: round;\n}\n\n.subunit-boundary.IRL {\n  stroke: #aaa;\n}\n\n.subunit-label {\n  fill: #777;\n  fill-opacity: .5;\n  font-size: 20px;\n  font-weight: 300;\n  text-anchor: middle;\n}\n.place-point\n.place\n.place-label {\n  fill: #444;\n}\n\ntext {\n  font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  font-size: 10px;\n  pointer-events: none;\n}\n#label {\n  position: absolute;\n  left: 10px;\n  font-weight: 100;\n  font-family: \"Proxima Nova\", \"Montserrat\", sans-serif;\n}\n\n.hover {\n    fill: yellow;   \n}\n.desplegable {\n        left: 10px;\n        top: 5px;\n    }\n/*\n#sliderContainer {\n    text-align: center;\n    top: 600px;\n    left:10px;\n}\n#histplot{\n    text-align: center;\n    top: 600px;\n    left:10px;\n}\n#map {\n    top: 2000px;\n    left:1000px;\n}\n*/\n</style>"]}]}