{"remainingRequest":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Hist.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/src/components/Hist.vue","mtime":1615790844794},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/apple/Desktop/study/大四上/Vis/vue_practice/museum_vis/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Hist.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Hist.vue","sourceRoot":"src/components","sourcesContent":["/* eslint-disable */\n<template>\n  <div id=\"hist\">\n     <p>\n      <h4>  Distribution of visit against age</h4>\n  </div>\n</template>\n\n<script>\nimport * as d3 from \"d3\";\nimport Bus from '../assets/bus.js';\n\nexport default {\n  name: \"App\",\n  data(){\n    return{\n      data:undefined,\n      svg:undefined,\n      x:undefined,\n      y:undefined,\n      yAxis:undefined,\n      u:undefined,\n      height1:undefined,\n      select_data_from_hist:undefined\n    }\n  },\n  created(){\n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val;})},\n  mounted() {\n    this.generateHist();\n    this.handle()\n  },\n  //watch:{handle(newval){\n    //this.age=newval,\n    //this.generateHist()}},\n  methods: {\n    handle: function () {\n    Bus.$on(\"Map_select_data\", (val) => {\n                this.data = val;\n                this.updatehist()\n              })},\n    generateHist() {\n      //let age = this.$root.age_select\n      var min = 19;\n      var max = 67;\n      var domain = [min,max];\n      var a = [19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,30,30,30,30,30,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,33,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,41,41,41,41,41,41,41,41,41,41,41,42,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,45,45,45,45,45,45,45,45,45,45,45,45,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,53,53,53,53,53,53,53,53,53,53,53,53,53,55,55,55,55,55,55,55,55,55,55,55,55,56,56,56,56,56,56,56,56,56,56,57,57,57,57,57,57,57,57,57,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,59,59,59,59,61,61,61,61,61,61,61,61,61,61,62,62,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65]\n      var margin = { top: 0, right: 10, bottom: 30, left: 20 },\n        width1 = 400 - margin.left - margin.right\n      this.height1 = 280 - margin.top - margin.bottom;\n      const svg1 = d3\n        .select(\"#hist\")\n        .append(\"svg\")\n        .attr(\"width\", width1 + margin.left + margin.right)\n        .attr(\"height\", this.height1 + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        var x = d3\n          .scaleLinear()\n          .domain(domain) \n          .range([0, width1]); \n        \n        svg1.append(\"g\")\n          .attr(\"transform\", \"translate(0,\" + this.height1 + \")\")\n          .call(d3.axisBottom(x));\n          // Y axis: initialization\n        var y = d3.scaleLinear()\n          .range([this.height1, 0]);\n        this.yAxis = svg1.append(\"g\")\n        var nBin=24\n        var histogram = d3\n          .histogram()\n          .domain(x.domain()) // then the domain of the graphic\n          .thresholds(x.ticks(nBin)); // then the numbers of bins\n\n        // And apply this function to data to get the bins\n        var bins = histogram(a);\n        // Add the svg element to the body and set the dimensions and margins of the graph\n\n        y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\n        this.yAxis\n        .transition()\n        .duration(1000)\n        .call(d3.axisLeft(y));\n        this.u = svg1\n          .selectAll(\"rect\")\n          .data(bins)\n\n        this.u.enter()\n          .append(\"rect\")\n          .attr(\"x\", 1)\n          .merge(this.u)\n          .transition()\n          .attr(\"height\", (d)=>this.height1 - y(d.length))\n          .attr(\"transform\", function(d) { \n            return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n          })\n          .attr(\"width\", function(d) {\n            return x(d.x1) - x(d.x0) - 1})\n          .attr(\"fill\", \"#6495ED\")\n          this.x = x\n          this.y = y\n          this.svg = svg1}, \nupdatehist(){\nlet self = this\nvar all_data = this.data\nvar age = []\nfor(var i=0, len=this.data.length-1; i<len; i++){\n  var d = this.data[i]\n  age.push(parseInt(d.properties.age))}\nvar svg1 = this.svg\nvar x = this.x\nvar y = this.y\nvar visited = []\n// The number of bins \nvar nBin=24\nvar histogram = d3\n  .histogram()\n  .domain(x.domain()) // then the domain of the graphic\n  .thresholds(x.ticks(nBin)); // then the numbers of bins\n\n// And apply this function to data to get the bins\nvar bins = histogram(age);\n// Add the svg element to the body and set the dimensions and margins of the graph\ny.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\nthis.yAxis\n.transition()\n.duration(1000)\n.call(d3.axisLeft(y));\n\nthis.u = svg1\n  .selectAll(\"rect\")\n  .data(bins)\n\n  this.u.enter()\n  .append(\"rect\")\n  .attr(\"x\", 1)\n  .merge(this.u)\n  .transition()\n  .attr('height', (d)=>this.height1 - y(d.length))\n  .attr(\"transform\", function(d) { \n    return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; \n  })\n  .attr(\"width\", function(d) {\n    return x(d.x1) - x(d.x0) - 1})\n  .attr(\"fill\", \"#6495ED\")\n  .attr(\"id\",function(d,i){\n    return [19+i*(67-19)/24,i]\n  })\nvar se = []\nfor (i = 0, len = bins.length; i < len; i++) {\n  d = bins[i]\n  se.push({'coordinates':[x(d.x0),y(d.length)]})\n}\nself.GLOBAL.Visual_state['Hist']['overall'] = se\nself.GLOBAL.Visual_state['Hist']['visit'] = []\n//Bus.$emit(\"change\", self.GLOBAL.Visual_state)\nvar select_age_by_column = []\nthis.u.on(\"click\",function(){\n    var that = this\n    var age = that.id.split(\",\")[0]\n    var index = that.id.split(\",\")[1]\n    self.GLOBAL.New_time = new Date().getTime()/1000\n    if((self.GLOBAL.New_time-self.GLOBAL.Old_time)>1){\n    visited.push([age,index])\n    self.GLOBAL.Visual_state['Hist']['visit'] = visited\n    Bus.$emit(\"change\", self.GLOBAL.Visual_state)\n    self.GLOBAL.Log_file.push(['timestamp',self.GLOBAL.New_time,\"click-hist-index\",index,'\\n'])\n    self.postInteraction({'name':self.GLOBAL.Log_file})\n    self.GLOBAL.Old_time = self.GLOBAL.New_time}\n    select_age_by_column.push(age)\n    d3.select(that)\n    .transition()\n    .duration(500)\n    .attr(\"fill\", \"orange\");\nvar select_data_from_hist = []\nfor(i=0, len=all_data.length-1; i<len; i++){\n  d = parseInt(all_data[i].properties.age)\n  for(var j=0,len2=select_age_by_column.length;j<len2;j++){\n    if(d-2<select_age_by_column[j]){\n      if (d>select_age_by_column[j]-1){\n      select_data_from_hist.push(all_data[i])\n    }}\n  }}\nBus.$emit(\"Hist_select_data\", select_data_from_hist)\n})\n}}\n}\n</script>"]}]}